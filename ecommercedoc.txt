(79)  Install Laravel8

composer create-project laravel/laravel ecommerce

php artisan serve

(80)  Install Laravel default authentication Jetstream

composer require laravel/jetstream
php artisan jetstream:install livewire

npm install && npm run dev


(81) Create database and migrate


using phpmyadmin create database ecommerce utf8mb4_general_ci

configure laravel mysql in .env like so
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=ecommerce
DB_USERNAME=root
DB_PASSWORD=root

to prevent failure on keylength with early mysql versions

Update your /app/Providers/AppServiceProvider.php to contain:

use Illuminate\Support\Facades\Schema;

/**
 * Bootstrap any application services.
 *
 * @return void
 */
public function boot()
{
    Schema::defaultStringLength(191);
}

php artisan migrate

Now we should get a basic landing page with login and register options

(97) Default Auth System profile Update

We alter dashboard.blade.php like so
<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
        {{ Auth::user()->name }}
        </h2>
    </x-slot>

    <div class="py-12">

    </div>
</x-app-layout>

We can turn some Auth features on and off in config fortify.php
and config jetstream.php
in jetstream.php we uncomment profile photos like so to enable the display of profile photos
Features::profilePhotos(),
we also have to change APP_URL in .env to display photos like so
APP_URL=http://localhost:8000

Next we must run 
php artisan storage:link

Now we can add profile photos

(98)  Setup admin table and seed database

php artisan r:l gives us our Route List

Now we want to create the Admin authentication

So first we create an admin controller
php artisan make:controller AdminController

Next our model and migration
php artisan make:model Admin -m

Next we copy our fields from user migration into the admin migration
after that we copy the entire user model into the admin model then rename the class to Admin
after that we run the migration
php artisan migrate


Now we want to create a seeder for the Admin Database
so the first thing that we have to do is create a factory
php artisan make:factory AdminFactory

Next we open database factorys AdminFactory.php and UserFactory.php
and copy the return fields from UserFactory to AdminFactory as well as the use
next we change it like so
       return [
            'name' => 'Admin',
            'email' => 'admin@gmail.com',
            'email_verified_at' => now(),
            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password
            'remember_token' => Str::random(10),
        ];

Next we open database seeder DatabaseSeeder.php and make it like so
    public function run()
    {
         \App\Models\Admin::factory()->create();
    }

Now we want migrate and seed like so
php artisan migrate --seed

now our one record was inserted into the table.

(99)  Creating Guards for Admin

first we open config auth.php and add the following lines of code
in the guards section 
       'admin' => [
            'driver' => 'session',
            'provider' => 'admins',
        ],
in the providers section
        'admins' => [
            'driver' => 'eloquent',
            'model' => App\Models\Admin::class,
        ],
In the password section 
        'admins' => [
            'provider' => 'admins',
            'table' => 'password_resets',
            'expire' => 60,
            'throttle' => 60,
        ],


Ctl p allows us to search fields

So first we search for and open AuthenticatedSessionController
Next we search for and open FortifyServiceProvider.php the one under App Providers
we change the register function like so  
we copied the AttemptToAuthenticate and RedirectIfTwoFactorAuthenticatable from AuthenticatedSessionController
   public function register()
    {
        $this->app->when([AdminController::class, 
        AttemptToAuthenticate::class, 
        RedirectIfTwoFactorAuthenticatable::class, ])
        ->needs(StatefulGuard::class)
        ->give(function(){
            return Auth::guard('admin');
        });
    }

We also have to add the supporting use statements like so
use Illuminate\Contracts\Auth\StatefulGuard;
use Laravel\Fortify\Actions\AttemptToAuthenticate;
use Laravel\Fortify\Actions\RedirectIfTwoFactorAuthenticatable;
use App\Http\Controllers\AdminController;

now under app folder we create a new folder Guards and in this folder we create
AdminStatefulGuard.php
next we copy StatefulGuard.php into our new file and rename the interface to AdminStatefulGuard

(100)  Laravel 8 Mutli Auth Part 1

Next we the namespace in AdminStatefulGuard to
namespace App\Guards;

Next we copy everything from AuthenticatedSessionController to AdminController and we update the namespace and class name

Now in web.php we create routes and add a use for AdminController like so
use App\Http\Controllers\AdminController;
Route::group(['prefix'=> 'admin', 'middleware'=>['admin:admin']], function(){
    Route::get('/login', [AdminController::class, 'loginForm']); 
    Route::post('/login', [AdminController::class, 'store'])->name('admin.login'); 
});

We also add a middleware route like so
Route::middleware(['auth:sanctum,admin', 'verified'])->get('/admin/dashboard', function () {
    return view('dashboard');
})->name('dashboard');

Now we create our loginForm method in AdminController like so specifying that we will use the admin guard
    public function loginForm(){
        return view('auth.login', ['guard' => 'admin']);
    }

Next we open resources views auth login.blade.php and add some logic to our form action like so
    <form method="POST" action="{{ isset($guard) ? url($guard.'/login') : route('login') }}">
so if we specify a guard the link will be one thing else default

Next we copy from vendor laravel fortify src actions AttemptToAuthenticate.php and RedirectIfTwoFactorAuthenticatable.php into
app Actions Fortify
Next we change the namespace in both to
namespace App\Actions\Fortify;

(101)  Laravel 8 Mutli Auth Part 2


We now have to create our middleware

So in app providers RouteServiceProvider we create a function like so
   public static function redirectTo($guard){
        return $guard.'/dashboard';
    }
this points back to the web.php route that we created earlier

Next we open up app Http Middleware RedirectIfAuthenticated.php and change it to
redirect to $guard.'/dashboard' like so
  public function handle(Request $request, Closure $next, ...$guards)
    {
        $guards = empty($guards) ? [null] : $guards;

        foreach ($guards as $guard) {
            if (Auth::guard($guard)->check()) {
                return redirect($guard.'/dashboard');
            }
        }

        return $next($request);
    }

So now it could redirect to web/dashboard or admin/dashboard and do so dynamically

So now we want to save RedirectIfAuthenticated as AdminRedirectIfAuthenticated
and change the class name.

Next, we want to register AdminRedirectIfAuthenticated.php with app Http kernal.php like so
adding to the bottom in the protected Middleware array
'admin' => \App\Http\Middleware\AdminRedirectIfAuthenticated::class,

Next in our AdminController we make a call into vendor laravel fortify src http responses LoginResponse.php

So we will create a new folder app http Responses and clone LoginReponse into it.

Next we fix our namespace
and change the return redirect to go to admin/dashboard like so
    public function toResponse($request)
    {
        return $request->wantsJson()
                    ? response()->json(['two_factor' => false])
                    : redirect()->intended('admin/dashboard');
    }

Now if we test /login we recieve an error Class 'App\Providers\Auth' not found

To fix this we open App Providers FortifyServiceProvider and add the use statement for Auth

So now we get rid of the error but I can't log in because we are now checking the Admins file instead of users file for info so
So I need to alter the seeded Admins profile to use a known password

So now if we login as admin and then manually bring up admin/dashboard we get a dashboard showing the authenticated name.

Not very smooth at this point.

Now we logout and resolve to solve everything.


(102)  Laravel 8 Mutli Auth Part 3

so our admin user can login from login but our std user cant login
if we try /admin/login we get a class error admin.admin does not exist
so we go to web.php and change this 
Route::group(['prefix'=> 'admin', 'middleware'=>['admin.admin']], function(){
to this
Route::group(['prefix'=> 'admin', 'middleware'=>['admin:admin']], function(){
and I go back and fix instructions

So now our admin profile may login using admin/login but no redirect occurs yet to the dashboard


To get this to work we want to change our use in AdminController for LoginResponse
to point to our new LoginResponse that we created like so
use App\Http\Responses\LoginResponse;

So now admin can login from admin/login and redirect to dashboard.



(103)  Laravel 8 Mutli Auth Part 4

So now we need to correct App Providers FortifyServiceProvider.php to use some of our modified code like so
use App\Actions\Fortify\AttemptToAuthenticate;
use App\Actions\Fortify\RedirectIfTwoFactorAuthenticatable;

We must also change the same use statements in AdminController

So now if we go to login and login as myronrogers.rogers@gmail.com we are able to login as user and
redirect to user dashboard.

(104)  Page Redirect after logout

So in our AdminController we are referencing the LogoutResponse class like so
return app(LogoutResponse::class);

This is in vendor laravel fortify src http Responses LogoutResponse.php so we open it up and 
change our redirect to admin/login  like so
class LogoutResponse implements LogoutResponseContract
{
    /**
     * Create an HTTP response that represents the object.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Symfony\Component\HttpFoundation\Response
     */
    public function toResponse($request)
    {
        return $request->wantsJson()
                    ? new JsonResponse('', 204)
                    : redirect('/login');
    }


(105)  Download Auth source

(106)  Project Video

(107) Download excersise fields

(108) Section Intro 

(109) Admin Template Setup

From Ecommerce_Excersise_Files\Project Themes\Admin Theme\main-dark we want
to copy css, js, and scss to public and create folder backend and paste 
we also want to copy Admin Theme\images over to backend
Now we want to copy Admin Theme\assets to public

So next we want to create the resources views admin folder

Next we create admin_master.blade.php and index.blade.php

Under admin folder we want to create another folder body
and within body we want to create header.blade.php, footer.blade.php, and sidebar.php

Now we want to load Project Themes\Admin THemes\main-dark\index.html
and copy it into admin_master.blade.php

We change our title and update our css js paths
<titleEasy Ecommerce Admin - Dashboard</title>
    <link rel="icon" href="{{ asset('backend/images/favicon.ico') }}">

    <titleEasy Ecommerce Admin - Dashboard</title>
   
	<!-- Vendors Style-->
	<link rel="stylesheet" href="{{ asset('backend/css/vendors_css.css') }}">
	  
	<!-- Style-->  
	<link rel="stylesheet" href="{{ asset('backend/css/style.css') }}">
	<link rel="stylesheet" href="{{ asset('backend/css/skin_color.css') }}">

	<!-- Vendor JS -->
	<script src="{{ asset('backend/js/vendors.min.js') }}"></script>
    <script src="{{ asset('../assets/icons/feather-icons/feather.min.js') }}"></script>	
	<script src="{{ asset('../assets/vendor_components/easypiechart/dist/jquery.easypiechart.js') }}"></script>
	<script src="{{ asset('../assets/vendor_components/apexcharts-bundle/irregular-data-series.js') }}"></script>
	<script src="{{ asset('../assets/vendor_components/apexcharts-bundle/dist/apexcharts.js') }}"></script>
	
	<!-- Sunny Admin App -->
	<script src="{{ asset('backend/js/template.js') }}"></script>
	<script src="{{ asset('backend/js/pages/dashboard.js') }}"></script>

Next we cut div class container-full out and paste it into index.blade.php
now where we made the cut we will change the empty div to
        <div class="content-wrapper">

         @yield('admin')
         
        </div>

at the top of index.blade.php we will inserted
@extends('admin.admin_master')

Under that we will add our admin section id like so
@section('admin')

we also have to place our @endsection at the bottom


So now we want to load this new page in web.php like so
making our returned view admin.index
Route::middleware(['auth:sanctum,admin', 'verified'])->get('/admin/dashboard', function () {
    return view('admin.index');
})->name('dashboard');

So now if we login as admin we get our new dashboard page

(110) Dashboard Page Segmentation

So first we cut out of admin_master <header class="main-header"> and paste into header.blade.php
then we add an include in it's place   @include('admin.body.header')

Now we want to do the same for sidebar and footer for sidebar
   @include('admin.body.sidebar')
   @include('admin.body.footer')

Next we remove control class control-sidebar

So next in header
<img src="{{ asset('backend/images/avatar/1.jpg') }}" alt="">

In sidebar
<h3><b>Easy</b> Shop</h3>
<img src="{{ asset('backend/images/logo-dark.png') }}" alt="">


(111) Admin Logout option

In header
<a class="dropdown-item" href="{{ route('admin.logout') }}"><i class="ti-lock text-muted mr-2"></i> Logout</a>
 
In web.php
// Admin All Routes

Route::get('//admin/logout', [AdminController::class, 'destroy'])->name('admin.logout'); 

destroy method already exists in AdminController

(112) Customize Login form

So we open from the main-dark theme directory auth_login.html and copy it to
resources views auth admin_login.blade.php  

We update our js and css links

Next we want to change our return view from loginForm AdminController like so
public function loginForm(){
        return view('auth.admin_login', ['guard' => 'admin']);
    }

so if we test admin/login we will see our new page

to get it working we copy the form tag and @csrf from login.blade.php over the 
static form tag in admin_login.blade.php

next we want our field id's etc from login to get copied over.
along with the forgotten password route

(113) Refresh Admin Template

So we cut alot out of Index.blade.php and updated our image links

And we updated our footer like so
<footer class="main-footer">
            <div class="pull-right d-none d-sm-inline-block">
                <ul class="nav nav-primary nav-dotted nav-dot-separated justify-content-center justify-content-md-end">
                    <li class="nav-item">
                        <a class="nav-link" href="javascript:void(0)">FAQ</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">www.google.com</a>
                    </li>
                </ul>
            </div>
            &copy; 2020 <a href="#">Easy Shop</a>. All Rights Reserved.
        </footer>

(114)  Admin and Profile & Image Update Part 1

Profile name email address etc

First we add our link to admin profile in header.blade
<a class="dropdown-item" href="{{ route('admin.profile')  }}"><i class="ti-user text-muted mr-2"></i> Profile</a>

Next we create a new Controller
php artisan make:controller Backend/AdminProfileController


Next we add our route in web.php
use App\Http\Controllers\Backend\AdminProfileController;
Route::get('/admin/profile', [AdminProfileController::class, 'AdminProfile'])->name('admin.profile'); 

Next we add our method to Controller
    public function AdminProfile(){
        $adminData = Admin::find(1);
        return view('admin.admin_profile_view', compact('adminData'));

    }

Next we create our returned view in the admin folder 
admin_profile_view.blade.php
we paste in index 
then cut it down to this
@extends('admin.admin_master')
@section('admin')

<div class="container-full">

    <!-- Main content -->
    <section class="content">
        <div class="row">

        </div>
    </section>
    <!-- /.content -->
</div>
@endsection

Next we copy box box-widget widget-user from profile.html
We cut out the backgound style
we drop in our Admin name and email and photos and profile edit button
<h3 class="widget-user-username">Admin Name: {{ $adminData->name }}</h3>
<h6 class="widget-user-desc">Admin Email: {{ $adminData->email }}</h6>
<img class="rounded-circle" src="{{ (!empty($adminData->profile_photo_path))?
url('upload/admin_images/'.$adminData->profile_photo_path):url('upload/no_image.jpg') }}" alt="User Avatar">
<a href="" style="float: right;" class="btn btn-rounded btn-success mb-5">Edit Profile</a>
We create the upload folder public upload admin_images
and copy no_image.jpg to public_upload

When we test we get no_image.jpg

(115)  Admin and Profile & Image Update Part 2

First we create a link in admin_profile_view to edit profile using the button created in the previous excercise
<a href="{{ route('admin.profile.edit') }}" style="float: right;" class="btn btn-rounded btn-success mb-5">Edit Profile</a>

Web.php
Route::get('/admin/profile/edit', [AdminProfileController::class, 'AdminProfileEdit'])->name('admin.profile.edit'); 


AdminProfileController
    public function AdminProfileEdit(){
        $editData = Admin::find(1);
        return view('admin.admin_profile_edit', compact('editData'));
    }


resources views admin create admin_profile_edit from admin_profile_view
we remove the section class content and replace it with main content from forms_validation.html

If we log into admin and select profile then the edit button we should see our new page

Now we need to pare it down to two fields email, file upload and an update button

(116)  Admin and Profile & Image Update Part 3

Now we add a script to manipulate an image so we start with giving both of our images
in admin_profile_edit id's.  Next we write the script like so and add the jQuery cdn
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script type="text/javascript">
$(document).ready(function(){
    $('#image').change(function(e){
        var reader = new FileReader();
        reader.onload = function(e){
            $('#showImage').attr('src',e.target.result);
        }
        reader.readAsDataURL(e.target.files['0']);
    });
});
</script>

Now when we select an image it displays even before we upload

(117)  Admin and Profile & Image Update Part 4

Now we make more changes to admin_profile_edit so that it updates data.


web.php
Route::post('/admin/profile/store', [AdminProfileController::class, 'AdminProfileStore'])->name('admin.profile.store'); 

AdminProfileController
    public function AdminProfileStore(Request $request){
        $data = Admin::find(1);
        $data->name = $request->name;
        $data->email = $request->email;

        if ($request->file('profile_photo_path')) {
            $file = $request->file('profile_photo_path');
            $unlink(public_path('upload/admin_images'.$data->profile_photo_path));
            $filename = date('YmdHi').$file->getClientOriginalName();
            $file->move(public_path('upload/admin_images'),$filename);
            $data['profile_photo_path'] = $filename;
        }
        $data->save();
        return redirect()->route('admin.profile');
    }

Now if we update image the new image is displayed

To display the image in header we update our image source to be like admin_profile_view and add some
php inline in the header like so
                        @php 
                        $adminData = DB::table('admins')->first();
                        @endphp
<img src="{{ (!empty($adminData->profile_photo_path))?
    url('upload/admin_images/'.$adminData->profile_photo_path):url('upload/no_image.jpg') }}" alt="">
 

(118)  Adding Toastr in for View Message

We make changes to admin profile controller for Toastr
    public function AdminProfileStore(Request $request){
        $data = Admin::find(1);
        $data->name = $request->name;
        $data->email = $request->email;

        if ($request->file('profile_photo_path')) {
            $file = $request->file('profile_photo_path');
            $filename = date('YmdHi').$file->getClientOriginalName();
            $file->move(public_path('upload/admin_images'),$filename);
            $data['profile_photo_path'] = $filename;
        }
        $data->save();

        $notification = array(
            'message' => 'Admin Profile Updated Successfully',
            'alert-type' => 'success'
        );
        return redirect()->route('admin.profile')->with($notification);
    }

and we make changes to admin_master.blade.php
       <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.css" integrity="sha512-3pIirOrwegjM6erE5gPSwkUzO+3cTjpnV9lexlNZqvupR64iZBnOOTiiLPb9M36zpMScbmUNIcHUqKD47M719g==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js" integrity="sha512-VEd+nq25CkR676O+pLBnDW09R7VQX9Mdiij052gVCp5yVH3jGtH70Ho/UUv4mJDsEdTvqRCFZg0NKGiojGnUCw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>     
 
    <script>
 
   @if(Session::has('message')) {

  var type = "{{ Session::get('alert-type' , 'info') }}";
  switch(type){
    case 'info':
    toastr.info(" {{ Session::get('message') }}");
    break;

    case 'success':
      toastr.success(" {{ Session::get('message') }}");  
    
    break;

    case 'warning':
    toastr.warning(" {{ Session::get('message') }}");
    break;

    case 'error':
    toastr.error(" {{ Session::get('message') }}");
    break;
  }
  }
  @endif
  </script>  

(119) Admin Profile Change Password Part 1

header.blade.php
<a class="dropdown-item" href="{{ route('admin.change.password')  }}"><i class="ti-wallet text-muted mr-2"></i> Change Password</a>

web.php
Route::get('/admin/change/password', [AdminProfileController::class, 'AdminChangePassword'])->name('admin.change.password'); 

create admin admin_change_password.blade.php and copy admin_profile_edit.blade.php
and edit


AdminProfileController
    public function AdminChangePassword(){
        return view('admin.admin_change_password');
    }

web.php
Route::post('/update/change/password', [AdminProfileController::class, 'AdminUpdateChangePassword'])->name('update.change.password'); 


(110) Admin Profile Change Password Part 2

AdminProfileController.php
    public function AdminUpdateChangePassword(Request $request){
        $validateData = $request->validate([
            'current_password' => 'required',
            'password' => 'required|confirmed',
        ]);

        $hashedPassword = Admin::find(1)->password;
        if (Hash::check($request->current_password, $hashedPassword)) {
            $admin = Admin::find(1);
            $admin->password = Hash::make($request->password);
            $admin->save();
            Auth::logout();
            return redirect()->route('admin.logout');
        }else{
            return redirect()->back();
        }
        

        
    }


(121)  Frontend Template Setup Part 1

First we create a new folder under views called frontend.
In frontend we create two files
main_master.blade.php
index.blade.php
then we create a folder
body
next from our frontend template we copy home.html src into main_master
next we copy assets folder to public frontend

Now we update our links in main_master to point at the assets folder in public frontend

Now we cut header out of main_master and paste it into body header.blade.php
we also create two more new files footer.blade.php and brand.blade.php

Next we include back into main_master 
@include('frontend.body.header')

Next we paste the main body into index.blade.php
and extend it and wrap it in a section
@extends('frontend.main.master')
@section('content')
@endsection

Now in main_master we want to yield content
@yield('content')

Next we want to cut out footer and paste it into footer then include it back in
@include('frontend.body.footer')

web.php
Route::get('/', [IndexController::class, 'index']);


(122)  Frontend Template Setup Part 2

Now we create IndexController
php artisan make:controller Frontend/IndexController
and add the use to web.php
use App\Http\Controllers\Frontend\IndexController;
and remove the welcome route at the top

Now we create our index function in IndexController
    public function index(){
        return view('frontend.index');
    }

Now are page should load

Now we go back through and update all of the image links that we ignored
earlier check for console log errors on missing stuff and update the links

Now we cut our brands carousel out of the bottom of index and paste it into brands
then we include it back in
       @include('frontend.body.brands')

(123) Frontend Template Login Setup

frontend Theme sign-in.html is an all in one registerxxxx

First we open Auth login.blade.php and bak it up then clear it.  Next we fill it in with
@extends('frontend.main_master')
@section('content')

@endsection


We copy frontend Theme sign-in.html starting after header end
to just before footer begins into our new section in login

now our new login will display

Next we cut out brands and copy include from index
      @include('frontend.body.brands')

Now we copy the form tag from our origional and paste it in replacing the form tag
       <form method="POST" action="{{ isset($guard) ? url($guard.'/login') : route('login') }}">
            @csrf

Next we update field names and id's and the forgot password route like so
                        <form method="POST" action="{{ isset($guard) ? url($guard.'/login') : route('login') }}">
                            @csrf
                            <div class="form-group">
                                <label class="info-title" for="email">Email Address <span>*</span></label>
                                <input type="email" class="form-control unicase-form-control text-input"
                                    id="email" name="email">
                            </div>
                            <div class="form-group">
                                <label class="info-title" for="password">Password <span>*</span></label>
                                <input type="password" class="form-control unicase-form-control text-input"
                                    id="password" name="password">
                            </div>
                            <div class="radio outer-xs">
                                <label>
                                    <input type="radio" name="optionsRadios" id="optionsRadios2" value="option2">Remember
                                    me!
                                </label>
                                <a href="{{ route('password.request') }}" class="forgot-password pull-right">Forgot your Password?</a>
                            </div>
                            <button type="submit" class="btn-upper btn btn-primary checkout-page-button">Login</button>
                        </form>

Now we should be able to login to dashboard page with user

(124) Frontend Template Register Page Setup

Now to make the dual form in login.blade.php work we have to copy our form tag from register.blade.php
and paste it over our second form tag in login
       <form method="POST" action="{{ route('register') }}">
            @csrf
Now we change our field names types and id's to match the old register form like so
                        <form method="POST" action="{{ route('register') }}">
                            @csrf
                            <div class="form-group">
                                <label class="info-title" for="name">Name <span>*</span></label>
                                <input type="text" class="form-control unicase-form-control text-input" id="name"
                                    name="name">
                            </div>
                            <div class="form-group">
                                <label class="info-title" for="email">Email Address <span>*</span></label>
                                <input type="email" class="form-control unicase-form-control text-input" id="email"
                                    id="email">
                            </div>
                            <div class="form-group">
                                <label class="info-title" for="phone">Phone Number <span>*</span></label>
                                <input type="text" class="form-control unicase-form-control text-input" id="phone"
                                    name="phone">
                            </div>
                            <div class="form-group">
                                <label class="info-title" for="password">Password <span>*</span></label>
                                <input type="password" class="form-control unicase-form-control text-input" id="password"
                                    name="password">
                            </div>
                            <div class="form-group">
                                <label class="info-title" for="password_confirmation">Confirm Password
                                    <span>*</span></label>
                                <input type="phone" class="form-control unicase-form-control text-input"
                                    id="password_confirmation" name="password_confirmation">
                            </div>
                            <button type="submit" class="btn-upper btn btn-primary checkout-page-button">Sign Up</button>
                        </form>

Next we manually add phone in phpmyadmin to avoid running new migration

Next we add phone to User Model
  protected $fillable = [
        'name',
        'email',
        'phone',
        'password',
    ];

Next in App Actions Fortify CreateNewUser Validator and User arrays
       Validator::make($input, [
            'name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],
            'phone' => ['required', 'string', 'max:255'],
            'password' => $this->passwordRules(),
            'terms' => Jetstream::hasTermsAndPrivacyPolicyFeature() ? ['required', 'accepted'] : '',
        ])->validate();

        return User::create([
            'name' => $input['name'],
            'email' => $input['email'],
            'phone' => $input['phone'],
            'password' => Hash::make($input['password']),
        ]);

Now we want to update error checking for all Registration fields like so
                            <div class="form-group">
                                <label class="info-title" for="name">Name <span>*</span></label>
                                <input type="text" class="form-control unicase-form-control text-input" id="name"
                                    name="name">
                                    @error('name')
                                    <span class="invalid-feedback" role="alert">
                                    <strong>{{ $message }}</strong>
                                    </span>
                                    @enderror    
                            </div>

Now we can register and login

Next copy login.blade.php to register.blade.php

Now in frontend body header.blade.php we update our Login item like so
<li><a href="{{ route('login') }}"><i class="icon fa fa-lock"></i>Login/Register</a></li>
and we want to update our logo like so
<div class="logo"> <a href="{{ url('/') }}"> <img src="{{ asset('frontend/assets/images/logo.png') }}" alt="logo"> </a> </div>

Now when we click on logo we are redirected home


Next to make the login/register link display at approriate times we change the link
in header like so and it is half axxed
              @auth
              <li><a href="{{ route('login') }}"><i class="icon fa fa-user"></i>User Profile</a></li>
                @else
              <li><a href="{{ route('login') }}"><i class="icon fa fa-lock"></i>Login/Register</a></li> 
              @endauth

(125) Frontend Template Forgot Password Page Setup

So we back up our forgot-password.blade clear it copy in login delete Registration
and pare login down to email then paste in the form tag from our back up
and change our button text
@extends('frontend.main_master')
@section('content')
    <div class="breadcrumb">
        <div class="container">
            <div class="breadcrumb-inner">
                <ul class="list-inline list-unstyled">
                    <li><a href="home.html">Home</a></li>
                    <li class='active'>Forgot Password</li>
                </ul>
            </div><!-- /.breadcrumb-inner -->
        </div><!-- /.container -->
    </div><!-- /.breadcrumb -->

    <div class="body-content">
        <div class="container">
            <div class="sign-in-page">
                <div class="row">
                    <!-- Sign-in -->
                    <div class="col-md-6 col-sm-6 sign-in">
                        <h4 class="">Forgot Password</h4>
                        <p class="">Reset Password</p>
                        <form method="POST" action="{{ route('password.email') }}">
                            @csrf                                            <div class="form-group">
                                <label class="info-title" for="email">Email Address <span>*</span></label>
                                <input type="email" class="form-control unicase-form-control text-input" id="email"
                                    name="email">
                            </div>
                             <button type="submit" class="btn-upper btn btn-primary checkout-page-button">Email Password Reset Link</button>
                        </form>
                    </div>
                    <!-- Sign-in -->

                </div><!-- /.row -->
            </div><!-- /.sigin-in-->
            <!-- ============================================== BRANDS CAROUSEL ============================================== -->
            @include('frontend.body.brands')
            <!-- ============================================== BRANDS CAROUSEL : END ============================================== -->
        </div><!-- /.container -->
    </div><!-- /.body-content -->

@endsection

Now we set up mailtrap IO.  In the .env file I change SMTP config 
from
MAIL_MAILER=smtp
MAIL_HOST=mailhog
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS=null
MAIL_FROM_NAME="${APP_NAME}"
to
MAIL_MAILER=smtp
MAIL_HOST=smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=c898f6d70b026f
MAIL_PASSWORD=e02786a0404b6a
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS=myronrogers.rogers@gmail.com
MAIL_FROM_NAME="${APP_NAME}"

Now we want to back up reset-password blade clear it and copy in forgot-password.blade
We change our heading text copy in the form tag and token field from our backup 
then we clone email to 3 fields
we change the field names ids field types and button text like so
@extends('frontend.main_master')
@section('content')
    <div class="breadcrumb">
        <div class="container">
            <div class="breadcrumb-inner">
                <ul class="list-inline list-unstyled">
                    <li><a href="home.html">Home</a></li>
                    <li class='active'>Reset Password</li>
                </ul>
            </div><!-- /.breadcrumb-inner -->
        </div><!-- /.container -->
    </div><!-- /.breadcrumb -->

    <div class="body-content">
        <div class="container">
            <div class="sign-in-page">
                <div class="row">
                    <!-- Sign-in -->
                    <div class="col-md-6 col-sm-6 sign-in">
                        <h4 class="">Reset Password</h4>

                        <form method="POST" action="{{ route('password.update') }}">
                            @csrf
                
                            <input type="hidden" name="token" value="{{ $request->route('token') }}">
                
                            <div class="form-group">
                                <label class="info-title" for="email">Email Address <span>*</span></label>
                                <input type="email" class="form-control unicase-form-control text-input" id="email"
                                    name="email">
                            </div>
                            <div class="form-group">
                                <label class="info-title" for="password">Password <span>*</span></label>
                                <input type="password" class="form-control unicase-form-control text-input" id="password"
                                    name="password">
                            </div>
                            <div class="form-group">
                                <label class="info-title" for="password_confirmation">Confirm Password
                                    <span>*</span></label>
                                <input type="password" class="form-control unicase-form-control text-input"
                                    id="password_confirmation" name="password_confirmation">
                            </div>
                            <button type="submit" class="btn-upper btn btn-primary checkout-page-button">Reset
                                Password</button>
                        </form>
                    </div>
                    <!-- Sign-in -->

                </div><!-- /.row -->
            </div><!-- /.sigin-in-->
            <!-- ============================================== BRANDS CAROUSEL ============================================== -->
            @include('frontend.body.brands')
            <!-- ============================================== BRANDS CAROUSEL : END ============================================== -->
        </div><!-- /.container -->
    </div><!-- /.body-content -->

@endsection


So now we can test password reset full circle

(126) User Profile Design Part 1

To change our dashboard we clear dashboard.blade.php and extend it then code it by hand like so 
@extends('frontend.main_master')
@section('content')
<div class="body-content">
    <div class="container">
        <div class="row">
            <div class="col-md-2"><br>
                <img class="card-img-top" style="border-radius: 50%" src="{{ (!empty($editData->profile_photo_path))?
                    url('upload/admin_images/'.$editData->profile_photo_path):url('upload/no_image.jpg') }}" height="100%" width="100%"><br><br>
                    <ul class="list-group list-group-flush">
                        <a href="" class="btn btn-primary btn-sm btn-block">Home</a>
                        <a href="" class="btn btn-primary btn-sm btn-block">Profile Update</a>
                        <a href="" class="btn btn-primary btn-sm btn-block">Change Password</a>
                        <a href="{{ route('user.logout') }}" class="btn btn-danger btn-sm btn-block">Logout</a>
                    </ul>
            </div>
            <div class="col-md-2">
            </div>
            <div class="col-md-6">
                <div class="card">
                    <h3 class="text-center"><span class="text-danger">Hi...</span><strong>{{ 
                        Auth::user()->name }}</strong> Welcome to Easy Online Shop </h3>
                </div>
            </div>

 
        </div>
    </div>
</div>

@endsection

(127) User Profile Design Part 2

Now we want to code the logout button.  
<a href="{{ route('user.logout') }}" class="btn btn-danger btn-sm btn-block">Logout</a>

web.php
Route::get('/user/logout', [IndexController::class, 'UserLogout'])->name('user.logout'); 

IndexController
use Illuminate\Support\Facades\Auth;
   public function UserLogout() {
        Auth::logout();
        return Redirect()->route('login');
    }

Now we want to code Profile Update button
<a href="{{ route('user.profile') }}" class="btn btn-primary btn-sm btn-block">Profile Update</a>

web.php
Route::get('/user/profile', [IndexController::class, 'UserProfile'])->name('user.profile'); 

IndexController
   public function UserProfile() {
        $id = Auth::user()->id;
        $user = User::find($id);
        return view('frontend.profile.user_profile',compact('user'));
    }

resources views frontend CREATE profile CREATE user_profile.blade.php

(128) User Profile Design Part 3

Now we copy dashboard to user_profile and test.
Next we modify it like so.
@extends('frontend.main_master')
@section('content')
<div class="body-content">
    <div class="container">
        <div class="row">
            <div class="col-md-2"><br>
                <img class="card-img-top" style="border-radius: 50%" src="{{ (!empty($editData->profile_photo_path))?
                    url('upload/admin_images/'.$editData->profile_photo_path):url('upload/no_image.jpg') }}" height="100%" width="100%"><br><br>
                    <ul class="list-group list-group-flush">
                        <a href="" class="btn btn-primary btn-sm btn-block">Home</a>
                        <a href="{{ route('user.profile') }}" class="btn btn-primary btn-sm btn-block">Profile Update</a>
                        <a href="" class="btn btn-primary btn-sm btn-block">Change Password</a>
                        <a href="{{ route('user.logout') }}" class="btn btn-danger btn-sm btn-block">Logout</a>
                    </ul>
            </div>
            <div class="col-md-2">
            </div>
            <div class="col-md-6">
                <div class="card">
                    <h3 class="text-center"><span class="text-danger">Hi...</span><strong>{{ 
                        Auth::user()->name }}</strong> Update Profile </h3>
                        <div class="card-body">
                            <form method="POST" action="{{ route('user.profile.store') }}" enctype="multipart/form-data">
                                @csrf
                                <div class="form-group">
                                    <label class="info-title" for="name">Name <span></span></label>
                                    <input type="text" class="form-control" id="name"
                                        name="name" value="{{ $user->name }}">
                                </div>
                                <div class="form-group">
                                    <label class="info-title" for="email">Email <span></span></label>
                                    <input type="email" class="form-control" id="email"
                                        name="email" value="{{ $user->email }}">
                                </div>
                                <div class="form-group">
                                    <label class="info-title" for="phone">Phone <span></span></label>
                                    <input type="text" class="form-control" id="phone"
                                        name="phone" value="{{ $user->phone }}">
                                </div>
                                <div class="form-group">
                                    <label class="info-title" for="profile_photo_path">Profile Photo <span></span></label>
                                    <input type="file" class="form-control" id="profile_photo_path"
                                        name="profile_photo_path" >
                                </div>
                                <div class="form-group">
                                    <button type="submit" class="btn btn-danger">Update Profile</button>
                                </div>

                            </form>
    
                        </div>
                </div>
            </div>

 
        </div>
    </div>
</div>

@endsection

web.php
Route::post('/user/profile/store', [IndexController::class, 'UserProfileStore'])->name('user.profile.store'); 

IndexController
   public function UserProfileStore(Request $request){
        $data = User::find(Auth::user()->id);
        $data->name = $request->name;
        $data->email = $request->email;
        $data->phone = $request->phone;

        if ($request->file('profile_photo_path')) {
            $file = $request->file('profile_photo_path');
         //   unlink(public_path('upload/user_images/'.$data->profile_photo_path));
            $filename = date('YmdHi').$file->getClientOriginalName();
            $file->move(public_path('upload/user_images'),$filename);
            $data['profile_photo_path'] = $filename;
        }
        $data->save();

        $notification = array(
            'message' => 'User Profile Updated Successfully',
            'alert-type' => 'success'
        );
        return redirect()->route('dashboard')->with($notification);

    }
}

user_profile.blade
                <img class="card-img-top" style="border-radius: 50%" src="{{ (!empty($user->profile_photo_path))?
                    url('upload/user_images/'.$user->profile_photo_path):url('upload/no_image.jpg') }}" height="100%" width="100%"><br><br>
                    <ul class="list-group list-group-flush">
                        <a href="{{ route('dashboard') }}" class="btn btn-primary btn-sm btn-block">Home</a>


To show the profile image on dashboard
web.php
use App\Models\User;
use Illuminate\Support\Facades\Auth;
Route::middleware(['auth:sanctum', 'verified'])->get('/dashboard', function () {
    $id = Auth::user()->id;
    $user = User::find($id);
    return view('dashboard',compact('user'));
})->name('dashboard');

dashboard.blade
<img class="card-img-top" style="border-radius: 50%" src="{{ (!empty($user->profile_photo_path))?
    url('upload/user_images/'.$user->profile_photo_path):url('upload/no_image.jpg') }}" height="100%" width="100%"><br><br>

(129) Toastr Alert Add Toastr Alert

we had to copy the toastr stuff from admin_master.blade to main_master.blade


(130) User Profile Password Change Part 1

From user.profile.blade.php we copy the following into dashboard.blade.php
<ul class="list-group list-group-flush">
    <a href="" class="btn btn-primary btn-sm btn-block">Home</a>
    <a href="{{ route('user.profile') }}" class="btn btn-primary btn-sm btn-block">Profile Update</a>
    <a href="" class="btn btn-primary btn-sm btn-block">Change Password</a>
    <a href="{{ route('user.logout') }}" class="btn btn-danger btn-sm btn-block">Logout</a>
</ul>

Next we add a route to change password like so
<a href="{{ route('change.password') }}" class="btn btn-primary btn-sm btn-block">Change Password</a>

Next in web.php we add the following route
Route::get('/user/change/password', [IndexController::class, 'UserChangePassword'])->name('change.password'); 

Next, in IndexController we add the UserChangePassord method and return our view and pass along the user data
     public function UserChangePassword(){
        $id = Auth::user()->id;
        $user = User::find($id);
        return view('frontend.profile.change_password',compact('user'));
    }

Next we create our view under frontend/profile change_password.blade.php
and copy user_profile.blade.php into it.

Next we make the nameing conventions for the password fields the same as update-password-form.php
 we remove the photo field and change the rest.  I have made an example entry showing how to do the user data retrieval from within the blade 
 instead of the controller.
 @extends('frontend.main_master')
@section('content')
<!-- @php
    $user = DB::table('users')->where('id',Auth::user()->id)->first();
@endphp -->
<div class="body-content">
    <div class="container">
        <div class="row">
            <div class="col-md-2"><br>
                <img class="card-img-top" style="border-radius: 50%" src="{{ (!empty($user->profile_photo_path))?
                    url('upload/user_images/'.$user->profile_photo_path):url('upload/no_image.jpg') }}" height="100%" width="100%"><br><br>
                    <ul class="list-group list-group-flush">
                        <a href="{{ route('dashboard') }}" class="btn btn-primary btn-sm btn-block">Home</a>
                        <a href="{{ route('user.profile') }}" class="btn btn-primary btn-sm btn-block">Profile Update</a>
                        <a href="" class="btn btn-primary btn-sm btn-block">Change Password</a>
                        <a href="{{ route('user.logout') }}" class="btn btn-danger btn-sm btn-block">Logout</a>
                    </ul>
            </div>
            <div class="col-md-2">
            </div>
            <div class="col-md-6">
                <div class="card">
                    <h3 class="text-center"><span class="text-danger">Change Password</span><strong></strong></h3>
                        <div class="card-body">
                            <form method="POST" action="{{ route('user.profile.store') }}" enctype="multipart/form-data">
                                @csrf
                                <div class="form-group">
                                    <label class="info-title" for="current_password">Current Password<span></span></label>
                                    <input type="password" class="form-control" id="current_password"
                                        name="current_password" >
                                </div>
                                <div class="form-group">
                                    <label class="info-title" for="password">New Password<span></span></label>
                                    <input type="password" class="form-control" id="password"
                                        name="password" >
                                </div>
                                <div class="form-group">
                                    <label class="info-title" for="password_confirmation">Confirm Password<span></span></label>
                                    <input type="password" class="form-control" id="password_confirmation"
                                        name="password_confirmation" >
                                </div>
                                <div class="form-group">
                                    <button type="submit" class="btn btn-danger">Update Profile</button>
                                </div>

                            </form>
    
                        </div>
                </div>
            </div>

 
        </div>
    </div>
</div>

@endsection


(131) User Profile Password Change Part 2



First we will change our form tag in change_password like so
<form method="POST" action="{{ route('user.password.update') }}">


Next we create our user.password.update route in web.php using a post 
Route::post('/user/password/update', [IndexController::class, 'UserPasswordUpdate'])->name('user.password.update'); 

Next we create our UserPasswordUpdate in IndexController so we copy AdminUpdateChangePassword from AdminController and change it like so
use Illuminate\Support\Facades\Hash;
   public function UserPasswordUpdate(Request $request){
        $validateData = $request->validate([
            'current_password' => 'required',
            'password' => 'required|confirmed',
        ]);

        $hashedPassword = Auth::user()->password;
        if (Hash::check($request->current_password, $hashedPassword)) {
            $user = User::find(Auth::id());
            $user->password = Hash::make($request->password);
            $user->save();
            Auth::logout();
            return redirect()->route('user.logout');
        }else{
            return redirect()->back();
        }
    }

The next thing we want to flush out is the Change password option in user_profile.blade.php
 <a href="{{ route('change.password') }}" class="btn btn-primary btn-sm btn-block">Change Password</a>

Since we have completed this menu we now want to copy the change password li to change_password.blade.php

(132) Upload Project to Github.

Go to github and create a new project by selecting the New button
Enter the project name and click the Create Repository button
on the next page select the text under ... or create a new repository on the command lines
git init
git add .
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/wunmansho/ecommerce.git
git push -u origin main

Next go to the ecommerce project directory in windows then right click and select git bash to 
open a bash session.
Do this to configure git should only have to do this once unless you need a 
local project configuration for a differant repository
  git config --global user.email "wunmansho.wunmansho@gmail.com"
  git config --global user.name "Myron Rogers"


Copy and paste the commands one at a time from the text above.
NOTE the git add command must be git add . with the period

(133)  Brand Page Design Part 1

We start by adding the Admin Backend

First we create our Controller
php artisan make:controller Backend/BrandController

Next we create our model and migration table
php artisan make:model Brand -m

Now we go to our brand migration and add fields like so
    public function up()
    {
        Schema::create('brands', function (Blueprint $table) {
            $table->id();
            $table->string('brand_name_en');
            $table->string('brand_name_hin');
            $table->string('brand_slug_en');
            $table->string('brand_slug_hin');
            $table->string('brand_image');
            $table->timestamps();
        });
    }

Next we go and modify our Model
class Brand extends Model
{
    use HasFactory;
    protected $fillable = [
        'brand_name_en',
        'brand_name_hin',
        'brand_slug_en',
        'brand_slug_hin',
        'brand_image',
    ];

}

Next to create our table we will run the migration
php artisan migrate

from admin body sidebar.blade.php we start by converting the application menu from our template into the Brand menu
                   <li class="treeview">
                        <a href="#">
                            <i data-feather="message-circle"></i>
                            <span>Brands</span>
                            <span class="pull-right-container">
                                <i class="fa fa-angle-right pull-right"></i>
                            </span>
                        </a>
                        <ul class="treeview-menu">
                            <li><a href="{{ route('all.brand') }}"><i class="ti-more"></i>All Brand</a></li>
                        </ul>
                    </li>

Next we add the all.brand route to web.php
Note since we used the prefix option the route will be /brand/view rather than view. So we add our new Controller and create the route
use App\Http\Controllers\Backend\BrandController;

Route::prefix('brand')->group(function(){
    Route::get('/view', [BrandController::class, 'BrandView'])->name('all.brand'); 
});


Next in BrandController we want to add our model and the BrandView function.
use App\Models\Brand;
class BrandController extends Controller
{
    public function BrandView(){
        $brands = Brand::latest()->get();
        return view('backend.brand.brand_view',compact('brands'));
    }
}


Next we need to create our backend folder under views and brand folder under backend 
and then create brand_view.blade.php
we copy in the bare bone basics like so and test to see that we hit a page when we click the new link from Admin Dashboard
@extends('admin.admin_master')
@section('admin')


@endsection


(134)  Brand Page Design Part 2

So now we want place use a template for our new page ao we go to
C:\servers\wamp64\www\laravel8\Ecommerce_Excersise_Files\Project Themes\Admin Theme\main-dark
and select tables_data.html
We copy the content wrapper from this page and paste into brand_view

Now we remove the content wrapper begin and end tags becuase we already have that wrapper
and pare this down to The Data Table with full features example.

Now to support our tables we need to copy a couple of js files from our template and
paste them into admin_master and modify the source attributes to use laravel API's.
  <script src=""{{ asset('../assets/vendor_components/datatable/datatables.min.js') }}"></script>
	  <script src=""{{ asset('backend/js/pages/data-table.js') }}"></script>

Now if we refresh our page to test we should be able to see the pagination and search options work.

Now we want to make the data Dynamic so we cut out static data from the table.
So we remove everything except the th and one tr.  We also delete the tfoot.


(135)  Brand Page Design Part 3


Now we want to add another card that will allow us to insert a new brand.

Once we have completed this and added a route for the form update our page is like so
@extends('admin.admin_master')
@section('admin')
    <div class="container-full">
        <!-- Content Header (Page header) -->

        <!-- Main content -->
        <section class="content">
            <div class="row">

                <div class="col-8">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Brand List</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <table id="example1" class="table table-bordered table-striped">
                                    <thead>

                                        <tr>
                                            <th>Brand En</th>
                                            <th>Brand Hin</th>
                                            <th>Image</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach ($brands as $item)
                                            <tr>
                                                <td>{{ $item->brand_name_en }}</td>
                                                <td>{{ $item->brand_name_hin }}</td>
                                                <td><img src="{{ asset($item->brand_image) }}"
                                                        style="width: 70px; height: 40px;"></td>
                                                <td>
                                                    <a href="" class="btn btn-info">Edit</a>
                                                    <a href="" class="btn btn-info">Delete</a>
                                                </td>
                                            </tr>
                                        @endforeach
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>
                <!-- /.col -->
                <!-- -------------- Add Brand Page ---------------- -->
                <div class="col-4">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Add Brand</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <form method="post" action="{{ route('brand.store') }}" enctype="multipart/form-data">
                                    @csrf
                                                <div class="form-group">
                                                    <h5>Brand Name English <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="brand_name_en" name="brand_name_en"
                                                            class="form-control">
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <h5>Brand Name Hindi <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="brand_name_hin" name="brand_name_hin"
                                                            class="form-control">
                                                    </div>
                                                </div>


                                                <div class="form-group">
                                                    <h5>Brand Image <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="file" id="brand_image"
                                                            name="brand_image" class="form-control">
                                                    </div>
                                                </div>    
                                                <div class="form-group">
                                                    <h5>Confirm Passord <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="password_confirmation"
                                                            name="password_confirmation" class="form-control">
                                                    </div>
                                                </div>                                      
                                    <div class="text-xs-right">
                                        <input type="submit" class="btn btn-rounded btn-primary mb-5" value="Add Brand">
                                    </div>
                                </form>

                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>

            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
    </div>


@endsection

Now we must add the brand.store route from the add form to web.php
   Route::get('/store', [BrandController::class, 'BrandStore'])->name('brand.store'); 

Next we create the BrandStore method in BrandController
we will add functionality to it in the next section

(136)  Add Active Sidebar menu

In sidebar.blade.php we want to dynamically make our active options show as active.
Step one in the process was to retrieve a couple of simple variables.  One is the
prefix we established for the brand routes and the other is the route name.
@php
    $prefix = Request::route()->getPrefix();
    $route = Route::current()->getName();
   // dd($route);
@endphp

Next we put these to work as follows
<li class="{{ ($route == 'dashboard')? 'active':'' }}">
<a href="{{ url('admin/dashboard') }}">
    <i data-feather="pie-chart"></i>
    <span>Dashboard</span>
</a>
</li>

<li class="treeview {{ ($prefix == '/brand')? 'active':'' }}">
<a href="#">
    <i data-feather="message-circle"></i>
    <span>Brands</span>
    <span class="pull-right-container">
        <i class="fa fa-angle-right pull-right"></i>
    </span>
</a>
<ul class="treeview-menu">
    <li class="{{ ($route == 'all.brand')? 'active':'' }}">
    <a href="{{ route('all.brand') }}"><i class="ti-more"></i>All Brand</a></li>
</ul>
</li>

(137)  Install Image Intervention Package.

First we install Intervention Image from the instructions
http://image.intervention.io/getting_started/installation

First we do the install using composer remembering in laravel we make some changes to composer
commands
php composer.phar require intervention/image 
must be changed to
composer require intervention/image

Next we follow the instructions under Integration in Laravel

After you have installed Intervention Image, open your Laravel config file config/app.php and add the following lines.
In the $providers array add the service providers for this package.  
Intervention\Image\ImageServiceProvider::class
Add the facade of this package to the $aliases array.  
'Image' => Intervention\Image\Facades\Image::class
Now the Image Class will be auto-loaded by Laravel.

Next we save and publish our configuration
php artisan vendor:publish --provider="Intervention\Image\ImageServiceProviderLaravelRecent"

(138) Brand Crud Part 1

Next we alter our brand.store route making it a post request
Route::post('/store', [BrandController::class, 'BrandStore'])->name('brand.store'); 

Now we finish out the BrandStore method like so

use Image;

     public function BrandStore(Request $request) {
        $request->validate([
            'brand_name_en' => 'required',
            'brand_name_hin' => 'required',
            'brand_image' => 'required',    
        ],[
            'brand_name_en.required' => 'Input Brand English Name',
            'brand_name_hin.required' => 'Input Brand Hindi Name',

        ]);
        $image = $request->file('brand_image');
        $name_gen = hexdec(uniqid()).'.'.$image->getClientOriginalExtension();
        Image::make($image)->resize(300,300)->save('upload/brand/'.$name_gen);
        $save_url = 'upload/brand/'.$name_gen;
        Brand::insert([
            'brand_name_en'  => $request->brand_name_en,
            'brand_name_hin'  => $request->brand_name_hin,
            'brand_slug_en'  => strtolower(str_replace(' ','-' ,$request->brand_name_en)),
            'brand_slug_hin'  => str_replace(' ','-' ,$request->brand_name_hin),
            'brand_image'  => $save_url,

        ]);
        $notification = array(
            'message' => 'Brand Inserted Successfully',
            'alert-type' => 'success'
        );
        return redirect()->back()->with($notification);
    }


brand_view.blade.php
@extends('admin.admin_master')
@section('admin')
    <div class="container-full">
        <!-- Content Header (Page header) -->

        <!-- Main content -->
        <section class="content">
            <div class="row">

                <div class="col-8">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Brand List</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <table id="example1" class="table table-bordered table-striped">
                                    <thead>

                                        <tr>
                                            <th>Brand En</th>
                                            <th>Brand Hin</th>
                                            <th>Image</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach ($brands as $item)
                                            <tr>
                                                <td>{{ $item->brand_name_en }}</td>
                                                <td>{{ $item->brand_name_hin }}</td>
                                                <td><img src="{{ asset($item->brand_image) }}"
                                                        style="width: 70px; height: 40px;"></td>
                                                <td>
                                                    <a href="" class="btn btn-info">Edit</a>
                                                    <a href="" class="btn btn-info">Delete</a>
                                                </td>
                                            </tr>
                                        @endforeach
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>
                <!-- /.col -->
                <!-- -------------- Add Brand Page ---------------- -->
                <div class="col-4">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Add Brand</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <form method="post" action="{{ route('brand.store') }}" enctype="multipart/form-data">
                                    @csrf
                                                <div class="form-group">
                                                    <h5>Brand Name English <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="brand_name_en" name="brand_name_en"
                                                            class="form-control">
                                                            @error('brand_name_en')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <h5>Brand Name Hindi <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="brand_name_hin" name="brand_name_hin"
                                                            class="form-control">
                                                            @error('brand_name_hin')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror

                                                    </div>
                                                </div>


                                                <div class="form-group">
                                                    <h5>Brand Image <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="file" id="brand_image"
                                                            name="brand_image" class="form-control">
                                                            @error('brand_image')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror

                                                    </div>
                                                </div>    
                                    <div class="text-xs-right">
                                        <input type="submit" class="btn btn-rounded btn-primary mb-5" value="Add Brand">
                                    </div>
                                </form>

                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>

            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
    </div>


@endsection

We go through and add brands

(139) Brand Crud Part 2

Now add functionality to the edit button.  I Start by adding a route to the link 
and pass along the id with it like so
<a href="{{ route('brand.edit', $item->id) }}" class="btn btn-info">Edit</a>

Now we add the route to web.php
Route::get('/edit/{id}', [BrandController::class, 'BrandEdit'])->name('brand.edit');

Next we add our BrandEdit method to BrandController
    public function BrandEdit($id) {
        $brand = Brand::findOrFail($id);
        return view('backend.brand.brand_edit',compact('brand'));
    }

Now we will add our new view as backend\brand\brand_edit.blade.php
Then we will copy brand_view in and make changes.
@extends('admin.admin_master')
@section('admin')
    <div class="container-full">
        <!-- Content Header (Page header) -->

        <!-- Main content -->
        <section class="content">
            <div class="row">


                <!-- -------------- Edit Brand Page ---------------- -->
                <div class="col-12">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Edit Brand</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <form method="post" action="{{ route('brand.update', $brand->id) }}" enctype="multipart/form-data">
                                    @csrf
                                    <input type="hidden" name="id" id="id" value="{{ $brand->id }}">
                                    <input type="hidden" name="old_image" id="old_image" value="{{ $brand->image_name }}">
                                                <div class="form-group">
                                                    <h5>Brand Name English <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="brand_name_en" name="brand_name_en"
                                                            class="form-control" value="{{ $brand->brand_name_en }}">
                                                            @error('brand_name_en')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <h5>Brand Name Hindi <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="brand_name_hin" name="brand_name_hin"
                                                            class="form-control" value="{{ $brand->brand_name_hin }}">
                                                            @error('brand_name_hin')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror

                                                    </div>
                                                </div>


                                                <div class="form-group">
                                                    <h5>Brand Image <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="file" id="brand_image"
                                                            name="brand_image" class="form-control" >
                                                            @error('brand_image')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror

                                                    </div>
                                                </div>    
                                    <div class="text-xs-right">
                                        <input type="submit" class="btn btn-rounded btn-primary mb-5" value="Update">
                                    </div>
                                </form>

                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>

            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
    </div>


@endsection

Now we create our brand.update route in web.php
Route::post('/update', [BrandController::class, 'BrandUpdate'])->name('brand.update'); 


Now we create our BrandUpdate method in BrandController
   public function BrandUpdate(Request $request) {
        $brand_id = $request->id;
        $old_image = $request->old_image;

        if ($request->file('brand_image')) {
            if ($old_image) {
            unlink($old_image);
            }
            $image = $request->file('brand_image');
            $name_gen = hexdec(uniqid()).'.'.$image->getClientOriginalExtension();
            Image::make($image)->resize(300,300)->save('upload/brand/'.$name_gen);
            $save_url = 'upload/brand/'.$name_gen;
            Brand::findOrFail($brand_id)->update([
                'brand_name_en'  => $request->brand_name_en,
                'brand_name_hin'  => $request->brand_name_hin,
                'brand_slug_en'  => strtolower(str_replace(' ','-' ,$request->brand_name_en)),
                'brand_slug_hin'  => str_replace(' ','-' ,$request->brand_name_hin),
                'brand_image'  => $save_url,
    
            ]);
            $notification = array(
                'message' => 'Brand Updated Successfully',
                'alert-type' => 'info'
            );
            return redirect()->route('all.brand')->with($notification);

        } else {
            Brand::findOrFail($brand_id)->update([
                'brand_name_en'  => $request->brand_name_en,
                'brand_name_hin'  => $request->brand_name_hin,
                'brand_slug_en'  => strtolower(str_replace(' ','-' ,$request->brand_name_en)),
                'brand_slug_hin'  => str_replace(' ','-' ,$request->brand_name_hin),
     
            ]);
            $notification = array(
                'message' => 'Brand Updated Successfully',
                'alert-type' => 'info'
            );
            return redirect()->route('all.brand')->with($notification);


        }


    }


(140) Brand Crud Part 3 Delete with SweetAlert Alert 2

We Copy code from the Sweetalert site in admin_master.blade.php and add the function wrapper
to trigger onclick with id delete and add the window.location on success

<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script type="text/javascript">
$(function(){
  $(document).on('click', '#delete',function(e){
    e.preventDefault();
    var link = $(this).attr("href");

Swal.fire({
  title: 'Are you sure?',
  text: "Delete this Data?",
  icon: 'warning',
  showCancelButton: true,
  confirmButtonColor: '#3085d6',
  cancelButtonColor: '#d33',
  confirmButtonText: 'Yes, delete it!'
}).then((result) => {
  if (result.isConfirmed) {
       window.location.href = link
    Swal.fire(
      'Deleted!',
      'Your file has been deleted.',
      'success'
    )
  }
})

});
});

</script>



To make it work In brand_view.blade.php we add name and id
<a href="{{ route('brand.delete', $item->id) }}" class="btn btn-info" name="delete" id="delete">Delete</a>

Now we want to Create our Route in web.php
Route::get('/delete/{id}', [BrandController::class, 'BrandDelete'])->name('brand.delete'); 

Next we create our BrandDelete method in BrandController



Finally we change the brand_view buttons to use icons
<a href="{{ route('brand.edit', $item->id) }}" class="btn btn-info" title"Edit Data"><i class="fa fa-pencil"></i></a>
<a href="{{ route('brand.delete', $item->id) }}" class="btn btn-info" id="delete" title"Delete Data"><i class="fa fa-trash"></a>


(141) Category Crud Part 1

The first thing that we do is create our menu item in sidebar.blade.php so we use the same sort of approach that we did 
with Brand so we convert the Mailbox menu item like so
<li class="treeview {{ ($prefix == '/category')? 'active':'' }}">
    <a href="#">
        <i data-feather="mail"></i> <span>Category</span>
        <span class="pull-right-container">
            <i class="fa fa-angle-right pull-right"></i>
        </span>
    </a>
    <ul class="treeview-menu">
        <li class="{{ ($route == 'all.category')? 'active':'' }}"><a href="{{ route('all.category') }}"><i class="ti-more"></i>All Category</a></li>
        </ul>
</li>

Next we create our CategoryController
php artisan make:controller Backend/CategoryController

Next we create our Model and migration
php artisan make:model Category -m

We modify out migration like so
    public function up()
    {
        Schema::create('categories', function (Blueprint $table) {
            $table->id();
            $table->string('category_name_en');
            $table->string('category_name_hin');
            $table->string('category_slug_en');
            $table->string('category_slug_hin');
            $table->string('category_icon');
            $table->timestamps();
        });
    }

Next we run the migration
php artisan migrate

Next in our model
    protected $fillable = [
        'category_name_en',
        'category_name_hin',
        'category_slug_en',
        'category_slug_hin',
        'category_icon',
    ];



In web.php
use App\Http\Controllers\Backend\CategoryController;
We clone and change our BrandRoutes Like So
// Admin Category All Routes

Route::prefix('category')->group(function(){
    Route::get('/view', [CategoryController::class, 'CategoryView'])->name('all.category'); 
    Route::post('/store', [CategoryController::class, 'CategoryStore'])->name('category.store'); 
    Route::get('/edit/{id}', [CategoryController::class, 'CategoryEdit'])->name('category.edit'); 
    Route::post('/update', [CategoryController::class, 'CategoryUpdate'])->name('category.update');
    Route::get('/delete/{id}', [CategoryController::class, 'CategoryDelete'])->name('category.delete'); 
});

Next in CategoryController we use our model and clone the BrandView method from BrandController
    public function CategoryView(){
        $category = Category::latest()->get();
        return view('backend.category.category_view',compact('category'));
    }


Next we create our category subfolder and category_view
@extends('admin.admin_master')
@section('admin')
    <div class="container-full">
        <!-- Content Header (Page header) -->

        <!-- Main content -->
        <section class="content">
            <div class="row">

                <div class="col-8">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Category List</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <table id="example1" class="table table-bordered table-striped">
                                    <thead>

                                        <tr>
                                            <th>Category Icon</th>
                                            <th>Category En</th>
                                            <th>Category Hin</th>                                           
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach ($category as $item)
                                            <tr>
                                                <td><span><i class="{{ $item->category_icon }}"></i></span></td>
                                                <td>{{ $item->category_name_en }}</td>
                                                <td>{{ $item->category_name_hin }}</td>
                                                    <a href="{{ route('category.edit', $item->id) }}" class="btn btn-info" title"Edit Data"><i class="fa fa-pencil"></i></a>
                                                    <a href="{{ route('category.delete', $item->id) }}" class="btn btn-info" id="delete" title"Delete Data"><i class="fa fa-trash"></i></a>
                                                                                                    </td>
                                            </tr>
                                        @endforeach
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>
                <!-- /.col -->
                <!-- -------------- Add Category Page ---------------- -->
                <div class="col-4">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Add Category</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <form method="post" action="{{ route('category.store') }}">
                                    @csrf
                                                <div class="form-group">
                                                    <h5>Category English <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="category_name_en" name="category_name_en"
                                                            class="form-control">
                                                            @error('category_name_en')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <h5>Category Hindi <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="category_name_hin" name="category_name_hin"
                                                            class="form-control">
                                                            @error('category_name_hin')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror

                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <h5>Category Icon <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="category_icon" name="category_icon"
                                                            class="form-control">
                                                            @error('category_icon')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror

                                                    </div>
                                                </div>


                                    <div class="text-xs-right">
                                        <input type="submit" class="btn btn-rounded btn-primary mb-5" value="Add Category">
                                    </div>
                                </form>

                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>

            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
    </div>


@endsection

(142) Category Crud Part 2

Now we uncomment our CategoryStore in web.php


Now we clone BrandStore to CategoryStore and change it like so
   public function CategoryStore(Request $request) {
        $request->validate([
            'category_name_en' => 'required',
            'category_name_hin' => 'required',
            'category_icon' => 'required',    
        ],[
            'category_name_en.required' => 'Input Category English Name',
            'category_name_hin.required' => 'Input Category Hindi Name',

        ]);

        Category::insert([
            'category_name_en'  => $request->category_name_en,
            'category_name_hin'  => $request->category_name_hin,
            'category_slug_en'  => strtolower(str_replace(' ','-' ,$request->category_name_en)),
            'category_slug_hin'  => str_replace(' ','-' ,$request->category_name_hin),
            'category_icon'  => $request->category_icon,

        ]);
        $notification = array(
            'message' => 'Category Inserted Successfully',
            'alert-type' => 'success'
        );
        return redirect()->back()->with($notification);
    }

    Now we add Category Data with fontawsome icons

    (143) Category Crud Part 3

    Due to the method that I used for cloning the Brand edit the category_view link 
    is already done as well as the route in web.php
<a href="{{ route('category.edit', $item->id) }}" class="btn btn-info" title"Edit Data"><i class="fa fa-pencil"></i></a>
Route::post('/store', [CategoryController::class, 'CategoryStore'])->name('category.store'); 


    public function CategoryEdit($id) {
        $category = Category::findOrFail($id);
        return view('backend.category.category_edit',compact('category'));
    }

@extends('admin.admin_master')
@section('admin')
    <div class="container-full">
        <!-- Content Header (Page header) -->

        <!-- Main content -->
        <section class="content">
            <div class="row">
                <!-- -------------- Edit Category Page ---------------- -->
                <div class="col-12">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Edit Category</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <form method="post" action="{{ route('category.update', $category->id) }}">
                                    @csrf
                                    <input type="hidden" name="id" id="id" value="{{ $category->id }}">
                                                <div class="form-group">
                                                    <h5>Category English <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="category_name_en" name="category_name_en"
                                                            class="form-control" value="{{ $category->category_name_en }}">
                                                            @error('category_name_en')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <h5>Category Hindi <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="category_name_hin" name="category_name_hin"
                                                            class="form-control" value="{{ $category->category_name_hin }}">
                                                            @error('category_name_hin')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror

                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <h5>Category Icon <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="category_icon" name="category_icon"
                                                            class="form-control" value="{{ $category->category_icon }}">
                                                            @error('category_icon')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror

                                                    </div>
                                                </div>


                                    <div class="text-xs-right">
                                        <input type="submit" class="btn btn-rounded btn-primary mb-5" value="Update">
                                    </div>
                                </form>

                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>

            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
    </div>


@endsection

Route::post('/update', [CategoryController::class, 'CategoryUpdate'])->name('category.update');

   public function CategoryUpdate(Request $request) {
        $category_id = $request->id;
        $old_icon = $request->old_icon;

             Category::findOrFail($category_id)->update([
                'category_name_en'  => $request->category_name_en,
                'category_name_hin'  => $request->category_name_hin,
                'category_slug_en'  => strtolower(str_replace(' ','-' ,$request->category_name_en)),
                'category_slug_hin'  => str_replace(' ','-' ,$request->category_name_hin),
                'category_icon'  => $request->category_icon,
    
            ]);
            $notification = array(
                'message' => 'Category Updated Successfully',
                'alert-type' => 'info'
            );
            return redirect()->route('all.category')->with($notification);
    }


(144) Category Crud Part 4

<a href="{{ route('category.delete', $item->id) }}" class="btn btn-info" id="delete" title"Delete Data"><i class="fa fa-trash"></i></a>

 Route::post('/update', [CategoryController::class, 'CategoryUpdate'])->name('category.update');

     public function CategoryDelete($id){
        $category = Category::findOrFail($id);
        Category::findOrFail($id)->delete();
        $notification = array(
            'message' => 'Category Deleted Successfully',
            'alert-type' => 'info',
        );
        return redirect()->back()->with($notification);
    } 

(145) Subcategory Crud Part 1

First we want to add a subcategory menu item to sidebar.blade.php
<li class="{{ ($route == 'all.subcategory')? 'active':'' }}"><a href="{{ route('all.subcategory') }}"><i class="ti-more"></i>All SubCategory</a></li>

Next we clone our Routes from Category and change them like so

// Admin Sub Category All Routes

Route::get('/sub/view', [SubCategoryController::class, 'SubCategoryView'])->name('all.subcategory'); 
Route::post('/sub/store', [SubCategoryController::class, 'SubCategoryStore'])->name('subcategory.store'); 
Route::get('/sub/edit/{id}', SubCategoryController::class, 'SubCategoryEdit'])->name('subcategory.edit'); 
Route::post('/sub/update', [SubCategoryController::class, 'SubCategoryUpdate'])->name('subcategory.update');
Route::get('/sub/delete/{id}', [SubCategoryController::class, 'SubCategoryDelete'])->name('subcategory.delete'); 

use App\Http\Controllers\Backend\SubCategoryController;

php artisan make:Controller Backend/SubCategoryController


php artisan make:model SubCategory -m

For the migration
    public function up()
    {
        Schema::create('sub_categories', function (Blueprint $table) {
            $table->id();
            $table->integer('category_id');
            $table->string('subcategory_name_en');
            $table->string('subcategory_name_hin');
            $table->string('subcategory_slug_en');
            $table->string('subcategory_slug_hin');
            $table->timestamps();
        });
    }

For the model
   protected $fillable = [
        'category_id',
        'subcategory_name_en',
        'subcategory_name_hin',
        'subcategory_slug_en',
        'subcategory_slug_hin',
    ];

php artisan migrate

Now in the real world I have already cloned and altered everything minus the handling
of our category_id foriegn key in the SubCategoryController.  So in our controller we start with
    public function SubCategoryView(){
        $subcategory = SubCategory::latest()->get();
        return view('backend.category.subcategory_view',compact('subcategory'));
    }

Make our subcategory_view

We clone category view to subcategory_view and make changes then we open forms_validation from our
templates and clone the Basic Select dropdown
Ecommerce_Excersise_Files\Project Themes\Admin Theme\main-dark\

We will use this to select our Foriegn Key item


(146) Subcategory Crud Part 2

Now we have to begin making the hooks to pull the Category Info into the SubCategoryController
so that we can handle our foriegn key.
use App\Models\Category;

   public function SubCategoryView(){
        $categories = Category::orderBy('category_name_en', 'ASC')->get();
        $subcategory = SubCategory::latest()->get();
        return view('backend.category.subcategory_view',compact('subcategory','categories'));
    }

We go over the subcategory_view and smooth it out like so
@extends('admin.admin_master')
@section('admin')
    <div class="container-full">
        <!-- Content Header (Page header) -->

        <!-- Main content -->
        <section class="content">
            <div class="row">

                <div class="col-8">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">SubCategory List</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <table id="example1" class="table table-bordered table-striped">
                                    <thead>

                                        <tr>
                                            <th>Category </th>
                                            <th>SubCategory En</th>
                                            <th>SubCategory Hin</th>                                           
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach ($subcategory as $item)
                                            <tr>
                                                <td>{{ $item->category_id }}</td>
                                                <td>{{ $item->subcategory_name_en }}</td>
                                                <td>{{ $item->subcategory_name_hin }}</td>
                                                  <td width="30%">  <a href="{{ route('subcategory.edit', $item->id) }}" class="btn btn-info" title"Edit Data"><i class="fa fa-pencil"></i></a>
                                                    <a href="{{ route('subcategory.delete', $item->id) }}" class="btn btn-info" id="delete" title"Delete Data"><i class="fa fa-trash"></i></a>
                                                                                                    </td>
                                            </tr>
                                        @endforeach
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>
                <!-- /.col -->
                <!-- -------------- Add SubCategory Page ---------------- -->
                <div class="col-4">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Add SubCategory</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <form method="post" action="{{ route('subcategory.store') }}">
                                    @csrf
                                                <div class="form-group">
                                                    <h5>Category Select <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <select name="category_id" id="category_id" class="form-control">
                                                            <option value="" selected="" disabled="">Select Category</option>
                                                            @foreach($categories as $category)
                                                            <option value="{{ $category->id }}">{{ $category->category_name_en }}</option>
                                                            @endforeach
                                                          </select>
                                                          @error('category_id')
                                                          <span class="text-danger">{{ $message }}</span>
                                                          @enderror
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <h5>SubCategory English <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="subcategory_name_en" name="subcategory_name_en"
                                                            class="form-control">
                                                            @error('subcategory_name_en')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror
                                                    </div>
                                                </div>


                                                <div class="form-group">
                                                    <h5>SubCategory Hindi <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="subcategory_name_hin" name="subcategory_name_hin"
                                                            class="form-control">
                                                            @error('subcategory_name_hin')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror

                                                    </div>
                                                </div>

 

                                    <div class="text-xs-right">
                                        <input type="submit" class="btn btn-rounded btn-primary mb-5" value="Add">
                                    </div>
                                </form>

                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>

            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
    </div>


@endsection

We massage our SubCategoryStore method like so
    public function SubCategoryStore(Request $request) {
        $request->validate([
            'category_id' => 'required',
            'subcategory_name_en' => 'required',
            'subcategory_name_hin' => 'required',
        ],[
            'category_id.required' => 'Please Select An option',
            'subcategory_name_en.required' => 'Input SubCategory English Name',
            'subcategory_name_hin.required' => 'Input SubCategory Hindi Name',

        ]);

        SubCategory::insert([
            'category_id'  => $request->category_id,
            'subcategory_name_en'  => $request->subcategory_name_en,
            'subcategory_name_hin'  => $request->subcategory_name_hin,
            'subcategory_slug_en'  => strtolower(str_replace(' ','-' ,$request->subcategory_name_en)),
            'subcategory_slug_hin'  => str_replace(' ','-' ,$request->subcategory_name_hin),

        ]);
        $notification = array(
            'message' => 'SubCategory Inserted Successfully',
            'alert-type' => 'success'
        );
        return redirect()->back()->with($notification);
    }

We add subcategory data

Now we do our work for edit

Our link and route is already done

We massage SubCategoryEdit method like so
    public function SubCategoryEdit($id) {
        $categories = Category::orderBy('category_name_en', 'ASC')->get();
        $subcategory = SubCategory::findOrFail($id);
        return view('backend.category.subcategory_edit',compact('subcategory', 'categories'));
    }



(147) Subcategory Crud Part 3

we create our subcategory_edit cloning the subcategory_view and massage it like so
@extends('admin.admin_master')
@section('admin')
    <div class="container-full">
        <!-- Content Header (Page header) -->

        <!-- Main content -->
        <section class="content">
            <div class="row">

                 <!-- -------------- Edit SubCategory Page ---------------- -->
                <div class="col-12">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Edit SubCategory</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <form method="post" action="{{ route('subcategory.update') }}">
                                    @csrf
                                    <input type="hidden" name="id" value="{{ $subcategory->id }}">
                                                <div class="form-group">
                                                    <h5>Category Select <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <select name="category_id" id="category_id" class="form-control">
                                                            <option value="" selected="" disabled="">Select Category</option>
                                                            @foreach($categories as $category)
                                                            <option value="{{ $category->id }}" {{ $category->id == $subcategory->category_id ? 'selected': '' }}>{{ $category->category_name_en }}</option>
                                                            @endforeach
                                                          </select>
                                                          @error('category_id')
                                                          <span class="text-danger">{{ $message }}</span>
                                                          @enderror
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <h5>SubCategory English <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="subcategory_name_en" name="subcategory_name_en"
                                                            class="form-control" value="{{ $subcategory->subcategory_name_en }}">
                                                            @error('subcategory_name_en')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror
                                                    </div>
                                                </div>


                                                <div class="form-group">
                                                    <h5>SubCategory Hindi <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="subcategory_name_hin" name="subcategory_name_hin"
                                                            class="form-control" value="{{ $subcategory->subcategory_name_hin }}">
                                                            @error('subcategory_name_hin')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror

                                                    </div>
                                                </div>

 

                                    <div class="text-xs-right">
                                        <input type="submit" class="btn btn-rounded btn-primary mb-5" value="Update">
                                    </div>
                                </form>

                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>

            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
    </div>


@endsection


Our route is already done
Route::post('/sub/update', [SubCategoryController::class, 'SubCategoryUpdate'])->name('subcategory.update');


We massage SubCategoryUpdate like so
    public function SubCategoryUpdate(Request $request) {
        $subcategory_id = $request->id;
 

             SubCategory::findOrFail($subcategory_id)->update([
                'category_id'  => $request->category_id,
                'subcategory_name_en'  => $request->subcategory_name_en,
                'subcategory_name_hin'  => $request->subcategory_name_hin,
                'subcategory_slug_en'  => strtolower(str_replace(' ','-' ,$request->subcategory_name_en)),
                'subcategory_slug_hin'  => str_replace(' ','-' ,$request->subcategory_name_hin),
    
            ]);
            $notification = array(
                'message' => 'SubCategory Updated Successfully',
                'alert-type' => 'info'
            );
            return redirect()->route('all.subcategory')->with($notification);
    }

Now we want to display the category_name rather than the id in subcategory_view

to do this first we add a method to our SubCategory model that established the relationship to 
Category
    public function category(){
        return $this->belongsTo(Category::class, 'category_id', 'id');
    }

Next we change our category_id in subcategory view to reference our new method and the field name category_name_en
<td>{{ $item['category']['category_name_en'] }}</td>

Our delete is already working here is the code.
<a href="{{ route('subcategory.delete', $item->id) }}" class="btn btn-info" id="delete" title"Delete Data"><i class="fa fa-trash"></i></a>
Route::get('/sub/delete/{id}', [SubCategoryController::class, 'SubCategoryDelete'])->name('subcategory.delete'); 
   public function SubCategoryDelete($id){
        $subcategory = SubCategory::findOrFail($id);
        SubCategory::findOrFail($id)->delete();
        $notification = array(
            'message' => 'SubCategory Deleted Successfully',
            'alert-type' => 'info',
        );
        return redirect()->back()->with($notification);
    }

()

(148) Sub Subcategory Crud Part 1

We start by adding a new menu option to sidebar
<li class="{{ ($route == 'all.subsubcategory')? 'active':'' }}"><a href="{{ route('all.subsubcategory') }}"><i class="ti-more"></i>All Sub->SubCategory</a></li>

php artisan make:model SubSubCategory -m

            $table->id();
            $table->integer('category_id');
            $table->integer('subcategory_id');
            $table->string('subsubcategory_name_en');
            $table->string('subsubcategory_name_hin');
            $table->string('subsubcategory_slug_en');
            $table->string('subsubcategory_slug_hin');
            $table->timestamps();


    protected $fillable = [
        'category_id',
        'subcategory_id',
        'subsubcategory_name_en',
        'subsubcategory_name_hin',
        'subsubcategory_slug_en',
        'subsubcategory_slug_hin',
    ];

    public function category(){
        return $this->belongsTo(Category::class, 'category_id', 'id');
    }

    public function subcategory(){
        return $this->belongsTo(SubCategory::class, 'subcategory_id', 'id');
    }

php artisan migrate

Next we create our route - Im pretending that I haven't already done them all
Route::get('/sub/sub/view', [SubCategoryController::class, 'SubSubCategoryView'])->name('all.subsubcategory'); 

Now we add our method to SubCategoryController
use App\Models\SubSubCategory;

    public function SubSubCategoryView(){
        $categories = Category::orderBy('category_name_en', 'ASC')->get();
      //  $subcategories = SubCategory::orderBy('subcategory_name_en', 'ASC')->get();
        $subsubcategory = SubSubCategory::latest()->get();
    //    return view('backend.category.subsubcategory_view',compact('subsubcategory','categories', 'subcategories'));
        return view('backend.category.subsubcategory_view',compact('subsubcategory','categories'));
    }

(149) Sub Subcategory Crud Part 2

Now we create our view subsubcategory_view.blade.php we clone subcategory_view and massage like so.  
Notice
we include Jquery and write some javascript at the bottom of the page to retrieve our subcategory
select info based on the option chosen in category select.

@extends('admin.admin_master')
@section('admin')
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <div class="container-full">
        <!-- Content Header (Page header) -->

        <!-- Main content -->
        <section class="content">
            <div class="row">

                <div class="col-8">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Sub->SubCategory List</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <table id="example1" class="table table-bordered table-striped">
                                    <thead>

                                        <tr>
                                            <th>Category </th>
                                            <th>SubCategory Name</th>
                                            <th>Sub-SubCategory English</th>
                                         <!--   <th>SubiSubCategory Hindi</th> -->                                          
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach ($subsubcategory as $item)
                                            <tr>
                                                <td>{{ $item['category']['category_name_en'] }}</td>
                                                <td>{{ $item['subcategory']['subcategory_name_en'] }}</td>
                                                <td>{{ $item->subsubcategory_name_en }}</td>
                                            <!--    <td>{{ $item->subsubcategory_name_hin }}</td> -->
                                                  <td width="30%">  <a href="{{ route('subsubcategory.edit', $item->id) }}" class="btn btn-info" title"Edit Data"><i class="fa fa-pencil"></i></a>
                                                    <a href="{{ route('subsubcategory.delete', $item->id) }}" class="btn btn-info" id="delete" title"Delete Data"><i class="fa fa-trash"></i></a>
                                                                                                    </td>
                                            </tr>
                                        @endforeach
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>
                <!-- /.col -->
                <!-- -------------- Add SubSubCategory Page ---------------- -->
                <div class="col-4">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Add Sub-SubCategory</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <form method="post" action="{{ route('subsubcategory.store') }}">
                                    @csrf
                                                <div class="form-group">
                                                    <h5>Category Select <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <select name="category_id" id="category_id" class="form-control">
                                                            <option value="" selected="" disabled="">Select Category</option>
                                                            @foreach($categories as $category)
                                                            <option value="{{ $category->id }}">{{ $category->category_name_en }}</option>
                                                            @endforeach
                                                          </select>
                                                          @error('category_id')
                                                          <span class="text-danger">{{ $message }}</span>
                                                          @enderror
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <h5>SubCategory Select <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <select name="subcategory_id" id="subcategory_id" class="form-control">
                                                            <option value="" selected="" disabled="">Select SubCategory</option>
                                                                                                                    
                                                          </select>
                                                          @error('subcategory_id')
                                                          <span class="text-danger">{{ $message }}</span>
                                                          @enderror
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <h5>Sub-SubCategory English <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="subsubcategory_name_en" name="subsubcategory_name_en"
                                                            class="form-control">
                                                            @error('subsubcategory_name_en')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror
                                                    </div>
                                                </div>


                                                <div class="form-group">
                                                    <h5>Sub-SubCategory Hindi <span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="text" id="subsubcategory_name_hin" name="subsubcategory_name_hin"
                                                            class="form-control">
                                                            @error('subsubcategory_name_hin')
                                                            <span class="text-danger">{{ $message }}</span>
                                                            @enderror

                                                    </div>
                                                </div>

 

                                    <div class="text-xs-right">
                                        <input type="subsubmit" class="btn btn-rounded btn-primary mb-5" value="Add">
                                    </div>
                                </form>

                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>

            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
    </div>

<script type="text/javascript">
$(document).ready(function  {
    $('select[name="category_id"]').on('change', function(){
        var category_id = $(this).val();
        if(category_id) {
            $.ajax({
                url: "{{ url('/category/subcategory/ajax') }}/" category_id,
                type:"GET",
                dataType:"json",
                success:function(data) {
                    var d = $('select[name="subcategory_id"]').empty();
                      $.each(data, function(key, value){
                          $('select[name="subcategory_id"]').append('<option
                          value="'+ value.id +'">' + value.subcategory_name_en 
                    + '</option>');

                    });
                },

            });
        } else {
            alert('danger');
        }

    });

});


</script>
@endsection

Now we must create the subcategory/ajax route to accomodate the javascript data retrieval
Route::get('/subcategory/ajax/{category_id}', [SubCategoryController::class, 'GetSubCategory']); 


Next we add our method to SubCategoryController and return the json data expected by
our javascript
    public function GetSubCategory($category_id) {
        $subcat = SubCategory::where('category_id', $category_id)->orderBy('
        subcategory_name_en', 'ASC')->get();
        return json_encode($subcat); 
    }


At this point when I test I am getting javascript errors.  I have replace my code with the project master code and still have errors.
So I am going to move on and commit these changes with errors and populate the DB manually for now and come back and fix this later when I have answers.


(150) Sub Subcategory Crud Part 3

<form method="post" action="{{ route('subsubcategory.store') }}" >

Route::post('/sub/sub/store', [SubCategoryController::class, 'SubSubCategoryStore'])->name('subsubcategory.store'); 

    public function SubSubCategoryStore(Request $request) {
        $request->validate([
            'category_id' => 'required',
            'subcategory_id' => 'required',
            'subsubcategory_name_en' => 'required',
            'subsubcategory_name_hin' => 'required',
        ],[
            'category_id.required' => 'Please Select An option',
            'subcategory_id.required' => 'Please Select An option',
            'subsubcategory_name_en.required' => 'Input SubSubCategory English Name',
            'subsubcategory_name_hin.required' => 'Input SubSubCategory Hindi Name',

        ]);

        SubSubCategory::insert([
            'category_id'  => $request->category_id,
            'subcategory_id'  => $request->subcategory_id,
            'subsubcategory_name_en'  => $request->subsubcategory_name_en,
            'subsubcategory_name_hin'  => $request->subsubcategory_name_hin,
            'subsubcategory_slug_en'  => strtolower(str_replace(' ','-' ,$request->subsubcategory_name_en)),
            'subsubcategory_slug_hin'  => str_replace(' ','-' ,$request->subsubcategory_name_hin),

        ]);
        $notification = array(
            'message' => 'SubSubCategory Inserted Successfully',
            'alert-type' => 'success'
        );
        return redirect()->back()->with($notification);
    }


   (151) Sub SubCategory Crud Part 4

   To create our subsubcategory edit we start with the link from sub_subcategory_view
    <a href="{{ route('subsubcategory.edit',$item->id) }}" class="btn btn-info" title="Edit Data"><i class="fa fa-pencil"></i> </a>

Next we establish our route in web.php
Route::get('/sub/sub/edit/{id}', [SubCategoryController::class, 'SubSubCategoryEdit'])->name('subsubcategory.edit'); 


Next our method SubSubCategoryEdit
public function SubSubCategoryEdit($id) {
        $categories = Category::orderBy('category_name_en', 'ASC')->get();
        $subcategories = SubCategory::orderBy('subcategory_name_en', 'ASC')->get();
        $subsubcategories = SubSubCategory::findOrFail($id);
        return view('backend.category.sub_subcategory_edit',compact('categories','subcategories','subsubcategories'));
    }

Next our view backend.category.sub_subcategory_edit
@extends('admin.admin_master')
@section('admin')
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <!-- Content Wrapper. Contains page content -->

    <div class="container-full">
        <!-- Content Header (Page header) -->


        <!-- Main content -->
        <section class="content">
            <div class="row">





                <!--   ------------ Edit Category Page -------- -->


                <div class="col-12">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Edit Sub-SubCategory </h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">


                                <form method="post" action="{{ route('subsubcategory.update') }}">
                                    @csrf

                                    <input type="hidden" name="id" value="{{ $subsubcategories->id }}">                                     
                                    <div class="form-group">
                                        <h5>Category Select <span class="text-danger">*</span></h5>
                                        <div class="controls">
                                            <select name="category_id" class="form-control">
                                                <option value="" selected="" disabled="">Select Category</option>
                                                @foreach ($categories as $category)
                                                    <option value="{{ $category->id }}" {{ $category->id == $subsubcategories->category_id ? 'selected': '' }}>
                                                        {{ $category->category_name_en }}</option>
                                                @endforeach
                                            </select>
                                            @error('category_id')
                                                <span class="text-danger">{{ $message }}</span>
                                            @enderror
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        <h5>SubCategory Select <span class="text-danger">*</span></h5>
                                        <div class="controls">
                                            <select name="subcategory_id" class="form-control">
                                                <option value="" selected="" disabled="">Select SubCategory</option>
                                            @foreach ($subcategories as $subsub)
                                                <option value="{{ $subsub->id }}" {{ $subsub->id == $subsubcategories->subcategory_id ? 'selected': '' }}>
                                                    {{ $subsub->subcategory_name_en }}</option>
                                            @endforeach

                                            </select>
                                            @error('subcategory_id')
                                                <span class="text-danger">{{ $message }}</span>
                                            @enderror
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        <h5>Sub-SubCategory English <span class="text-danger">*</span></h5>
                                        <div class="controls">
                                            <input type="text" name="subsubcategory_name_en" class="form-control" value="{{ $subsubcategories->subsubcategory_name_en }}">
                                            @error('subsubcategory_name_en')
                                                <span class="text-danger">{{ $message }}</span>
                                            @enderror
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        <h5>Sub-SubCategory Hindi <span class="text-danger">*</span></h5>
                                        <div class="controls">
                                            <input type="text" name="subsubcategory_name_hin" class="form-control" value="{{ $subsubcategories->subsubcategory_name_hin }}">
                                            @error('subsubcategory_name_hin')
                                                <span class="text-danger">{{ $message }}</span>
                                            @enderror
                                        </div>
                                    </div>


                                    <div class="text-xs-right">
                                        <input type="submit" class="btn btn-rounded btn-primary mb-5" value="Update">
                                    </div>
                                </form>





                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>




            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->

    </div>

@endsection


Next our Route in web.php
Route::post('/sub/sub/update', [SubCategoryController::class, 'SubSubCategoryUpdate'])->name('subsubcategory.update');

Now our SubSubCategoryUpdate method
    public function SubSubCategoryUpdate(Request $request) {
        $subsubcategory_id = $request->id;
 

             SubSubCategory::findOrFail($subsubcategory_id)->update([
                'category_id'  => $request->category_id,
                'subcategory_id'  => $request->subcategory_id,
                'subsubcategory_name_en'  => $request->subsubcategory_name_en,
                'subsubcategory_name_hin'  => $request->subsubcategory_name_hin,
                'subsubcategory_slug_en'  => strtolower(str_replace(' ','-' ,$request->subsubcategory_name_en)),
                'subsubcategory_slug_hin'  => str_replace(' ','-' ,$request->subsubcategory_name_hin),
    
            ]);
            $notification = array(
                'message' => 'SubSubCategory Updated Successfully',
                'alert-type' => 'info'
            );
            return redirect()->route('all.subsubcategory')->with($notification);
    }

Note my GIT commits don't really match the steps because I skipped ahead and coded most of this 
prior to the Lesson the delete is really already done.

   (152) Sub SubCategory Crud Part 5   

 In our sub_subcategory_view we create our delete link
 <a href="{{ route('subsubcategory.delete',$item->id) }}" class="btn btn-danger" title="Delete Data" id="delete">


 Next our web route
 Route::get('/sub/sub/delete/{id}', [SubCategoryController::class, 'SubSubCategoryDelete'])->name('subsubcategory.delete'); 

Next the SubSubCategoryDelete method
    public function SubSubCategoryDelete($id){
       SubSubCategory::findOrFail($id)->delete();
        $notification = array(
            'message' => 'SubSubCategory Deleted Successfully',
            'alert-type' => 'info',
        );
        return redirect()->back()->with($notification);
    }

(153) Add Product Database and Page Design Part 1

Now we want to create a way to add products so we start with the sidebar menu
so we convert the Pages menu to this               
    <li class="treeview {{ ($prefix == '/product')? 'active':'' }}">
                        <a href="#">
                            <i data-feather="file"></i>
                            <span>Products</span>
                            <span class="pull-right-container">
                                <i class="fa fa-angle-right pull-right"></i>
                            </span>
                        </a>
                        <ul class="treeview-menu">
                            <li class="{{ ($route == 'add-product')? 'active':'' }}"><a href="{{ route('add-product') }}"><i class="ti-more"></i>Add Products</a></li>
                            <li ><a href="invoice.html"><i class="ti-more"></i>Manage Products</a></li>
                        </ul>
                    </li>

Next we add our routing prefix by cloning and changing the Brand routes in web.php

use App\Http\Controllers\Backend\ProductController;

Route::prefix('product')->group(function(){
    Route::get('/add', [ProductController::class, 'AddProduct'])->name('add-product'); 
});



Next we create our controller
php artisan make:controller Backend/ProductController

Now we create our model and migration
php artisan make:model Product -m

Now we chan ge our migration like so
    public function up()
    {
        Schema::create('products', function (Blueprint $table) {
            $table->id();
            $table->integer('brand_id');
            $table->integer('category_id');
            $table->integer('subcategory_id');
            $table->integer('subsubcategory_id');
            $table->string('product_name_en');
            $table->string('product_name_hin');
            $table->string('product_slug_en');
            $table->string('product_slug_hin');
            $table->string('product_code');
            $table->string('product_qty');
            $table->string('product_tags_en');
            $table->string('product_tags_hin');
            $table->string('product_size_en')->nullable();
            $table->string('product_size_hin')->nullable();
            $table->string('product_color_en');
            $table->string('product_color_hin');
            $table->string('selling_price');
            $table->string('discount_price')->nullable();
            $table->string('short_desc_en');
            $table->string('short_desc_hin');
            $table->string('long_desc_en');
            $table->string('long_desc_hin');
            $table->string('product__thumbnail');
            $table->integer('hot_deals')->nullable();
            $table->integer('featured')->nullable();
            $table->integer('special_offer')->nullable();
            $table->integer('special_deals')->nullable();
            $table->integer('status')->default(0);
            $table->timestamps();
        });

For our model we do a workaround to aviod creating all of the protected fillables that we normally create
class Product extends Model
{
    use HasFactory;
    protected $guarded = [];
}

Next we create an additional model so that we may attach multiple pictures to a product
php artisan make:model MultiImg -m

We alter our migration
    public function up()
    {
        Schema::create('multi_imgs', function (Blueprint $table) {
            $table->id();
            $table->integer('product_id');
            $table->string('photo_name');
            $table->timestamps();
        });
    }

We alter our Model
class MultiImg extends Model
{
    use HasFactory;
    protected $guarded = [];
}


Now we migrate
php artisan migrate

(154) Add Product Database and Page Design Part 2

For ProductController we add our use statements and the AddProduct method
use App\Models\Category;
use App\Models\SubCategory;
use App\Models\SubSubCategory;
use App\Models\Brand;
use App\Models\Product;

    public function AddProduct(){
        $categories = Category::latest()->get();
        $brands = Brand::latest()->get();
        return view('backend.product.product_add',compact('categories','brands'));

    }


We create our backend.product.product_add view
and copy in the std template
@extends('admin.admin_master')
@section('admin')


@endsection

Now we test our Add Product link to make sure everything holds up

So from our templates dark themes we extract the content wrapper from forms_validation.html
and then remove the begin and end content wrapper tags.  We then trim it down and massage it like so
adding the category select three times.

(155) Add Product Database and Page Design Part 3

Finishing product_add
We add more fields and Copy the Tags example from forms_advanced.html
We also had to mod editor.js to support 2 instances of CKEDIT
See product_add.blade.php for details


(156) Add Product Database and Page Design Part 4

Next we write javascript to retrieve Categories etc
   <script type="text/javascript">
        $(document).ready(function() {
            $('select[name="category_id"]').on('change', function() {
                var category_id = $(this).val();
                if (category_id) {
                    $.ajax({
                        url: "{{ url('/category/subcategory/ajax') }}/" + category_id,
                        type: "GET",
                        dataType: "json",
                        success: function(data) {
                            $('select[name="subsubcategory_id"]').html('');
                            var d = $('select[name="subcategory_id"]').empty();
                            $.each(data, function(key, value) {
                                $('select[name="subcategory_id"]').append(
                                    '<option value="' + value.id + '">' + value
                                    .subcategory_name_en + '</option>');
                            });
                        },
                    });
                } else {
                    alert('danger');
                }
            });



            $('select[name="subcategory_id"]').on('change', function() {
                var subcategory_id = $(this).val();
                if (subcategory_id) {
                    $.ajax({
                        url: "{{ url('/category/sub-subcategory/ajax') }}/" + subcategory_id,
                        type: "GET",
                        dataType: "json",
                        success: function(data) {
                            var d = $('select[name="subsubcategory_id"]').empty();
                            $.each(data, function(key, value) {
                                $('select[name="subsubcategory_id"]').append(
                                    '<option value="' + value.id + '">' + value
                                    .subsubcategory_name_en + '</option>');
                            });
                        },
                    });
                } else {
                    alert('danger');
                }
            });


        });
    </script>

To make our javascript work when we Retrieve SubSubcategory for the SubSubCategory dropdown we need
to create a new route in web.php
Route::get('/sub-subcategory/ajax/{subcategory_id}', [SubCategoryController::class, 'GetSubSubCategory']);

Next we create our GetSubSubCategory method in SubCategoryController
    public function GetSubSubCategory($subcategory_id){

        $subsubcat = SubSubCategory::where('subcategory_id',$subcategory_id)->orderBy('subsubcategory_name_en','ASC')->get();
        return json_encode($subsubcat);
    }


(157)  Add Some Demo Data for Categories

The Demo Data has been inserted


(158) Solve Select Category Javascript error

I inserted an additional fix inserting one blank subcategory to 
fix select problem with first item
$('select[name="subcategory_id"]').append(
'<option value="' + '' + '">' + '' + '</option>');

(159) Product Upload Part 1

We add Javascript and Change Input fields to display images

                                            <div class='col-md-4'>
                                                <div class="form-group">
                                                    <h5>Main Thumbnail<span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="file" name="product_thumbnail" id="product_thumbnail"
                                                            class="form-control" onChange="mainThumbUrl(this)"  required="">
                                                    </div>
                                                    @error('product_thumbnail')
                                                        <span class="text-danger">{{ $message }}</span>
                                                    @enderror
                                                    <img src="" id="mainThmb">
                                                </div>

                                            </div>
                                            <div class='col-md-4'>
                                                <div class="form-group">
                                                    <h5>Multiple Image<span class="text-danger">*</span></h5>
                                                    <div class="controls">
                                                        <input type="file" name="multi_img[]" class="form-control" multiple=""  id="multiImg" required="">
                                                    </div>
                                                    @error('multi_img')
                                                        <span class="text-danger">{{ $message }}</span>
                                                    @enderror
                                                    <div class="row" id="preview_img"></div>
                                                </div>

   <script type="text/javascript">
        function mainThumbUrl(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    $('#mainThmb').attr('src', e.target.result).width(80).height(80);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>


    <script>
        $(document).ready(function() {
            $('#multiImg').on('change', function() { //on file input change
                if (window.File && window.FileReader && window.FileList && window
                    .Blob) //check File API supported browser
                {
                    var data = $(this)[0].files; //this file data

                    $.each(data, function(index, file) { //loop though each file
                        if (/(\.|\/)(gif|jpe?g|png|jpg)$/i.test(file
                                .type)) { //check supported file type
                            var fRead = new FileReader(); //new filereader
                            fRead.onload = (function(file) { //trigger function on successful read
                                return function(e) {
                                    var img = $('<img/>').addClass('thumb').attr('src',
                                            e.target.result).width(80)
                                        .height(80); //create image element 
                                    $('#preview_img').append(
                                        img); //append image to output element
                                };
                            })(file);
                            fRead.readAsDataURL(file); //URL representing the file's data.
                        }
                    });

                } else {
                    alert("Your browser doesn't support File API!"); //if File API is absent
                }
            });
        });
    </script>

(160)  Product Upload Part 2

So we set up our form tag in product_add
<form method="post" action="{{ route('product-store') }}" enctype="multipart/formdata">
@csrf


Create our web.php route
Route::post('/store', [ProductController::class, 'StoreProduct'])->name('store-product'); 

Now we create our method in ProductController
use App\Models\MultiImg;
use Carbon\Carbon;
use Image;
     public function StoreProduct(Request $request){
        $image = $request->file('product_thumbnail');
    	$name_gen = hexdec(uniqid()).'.'.$image->getClientOriginalExtension();
    	Image::make($image)->resize(917,1000)->save('upload/products/thumbnail/'.$name_gen);
    	$save_url = 'upload/products/thumbnail/'.$name_gen;

        $product_id = Product::insertGetId([           'brand_id' => $request->brand_id, 
           'category_id' => $request->category_id,
           'subcategory_id' => $request->subcategory_id,
           'subsubcategory_id' => $request->subsubcategory_id,
           'product_name_en' => $request->product_name_en,
           'product_name_hin' => $request->product_name_hin,
           'product_slug_en' => strtolower(str_replace(' ','-' ,$request->product_slug_en)),
           'product_slug_hin' => strtolower(str_replace(' ','-' ,$request->product_slug_hin)),
           'product_code' => $request->product_code,
           'product_qty' => $request->product_qty,
           'product_tags_en' => $request->product_tags_en,
           'product_tags_hin' => $request->product_tags_hin,
           'product_size_en' => $request->product_size_en,
           'product_size_hin' => $request->product_size_hin,
           'product_color_en' => $request->product_color_en,
           'product_color_hin' => $request->product_color_hin,
           'selling_price' => $request->selling_price,
           'discount_price' => $request->discount_price,
           'short_desc_en' => $request->short_desc_en,
           'short_desc_hin' => $request->short_desc_hin,
           'long_desc_en' => $request->long_desc_en,
           'long_desc_hin' => $request->long_desc_hin,
           'hot_deals' => $request->hot_deals,
           'featured' => $request->featured,
           'special_offer' => $request->special_offer,
           'special_deals' => $request->special_deals,

           'product_thumbnail' => $save_url,
           'status' => 1,
           'created_at' => Carbon::now(),   
 

        ]);

         ////////// Multiple Image Upload Start ///////////

      $images = $request->file('multi_img');
      foreach ($images as $img) {
      	$make_name = hexdec(uniqid()).'.'.$img->getClientOriginalExtension();
    	Image::make($img)->resize(917,1000)->save('upload/products/multi-image/'.$make_name);
    	$uploadPath = 'upload/products/multi-image/'.$make_name;

    	MultiImg::insert([

    		'product_id' => $product_id,
    		'photo_name' => $uploadPath,
    		'created_at' => Carbon::now(), 

    	]);

      }

      ////////// End Multiple Image Upload Start ///////////


       $notification = array(
			'message' => 'Product Inserted Successfully',
			'alert-type' => 'success'
		);

		 return redirect()->back()->with($notification); 
    }

We create the folder /public/upload/products/thumbnail for our product images
We create the folder /public/upload/products/multi-image for our product images

We go back to product_add and mark most of our fields up to long desc as required=""

(161)  Product Upload Part 3

We add records

(162)  Manage Products Read All Product Data


In sidebar
<li class="{{ ($route == 'manage-product')? 'active':'' }}"><a href="{{ route('manage-product') }}"><i class="ti-more"></i>Manage Products</a></li>

in web.php
    Route::get('/manage', [ProductController::class, 'ManageProduct'])->name('manage-product');


in ProductController
return redirect()->route('manage-product')->with($notification);
    public function ManageProduct(){

		$products = Product::latest()->get();
		return view('backend.product.product_view',compact('products'));
	}

    we create product_view and copy category_view code in
@extends('admin.admin_master')
@section('admin')
    <div class="container-full">
        <!-- Content Header (Page header) -->

        <!-- Main content -->
        <section class="content">
            <div class="row">

                <div class="col-12">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Product List</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive">
                                <table id="example1" class="table table-bordered table-striped">
                                    <thead>

                                        <tr>
                                            <th>Image</th>
                                            <th>Product Name En</th>
                                            <th>Product Nam Hin</th>  
                                            <th>Quantity</th>                                          
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach ($products as $item)
                                            <tr>
                                                <td><img src="{{ asset($item->product_thumbnail) }}" style="width: 60px; height: 50px;"></td>
                                                <td>{{ $item->product_name_en }}</td>
                                                <td>{{ $item->product_name_hin }}</td>
                                                <td>{{ $item->product_qty }}</td>
                                                  <td>  <a href="{{ route('category.edit', $item->id) }}" class="btn btn-info" title"Edit Data"><i class="fa fa-pencil"></i></a>
                                                    <a href="{{ route('category.delete', $item->id) }}" class="btn btn-info" id="delete" title"Delete Data"><i class="fa fa-trash"></i></a>
                                                                                                    </td>
                                            </tr>
                                        @endforeach
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->


                </div>
                <!-- /.col -->
 

            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
    </div>


@endsection





(163) Manage Product Edit Option Part 1

product_view
<td>  <a href="{{ route('product.edit', $item->id) }}" class="btn btn-info" title"Edit Data"><i class="fa fa-pencil"></i></a>

web.php
    Route::get('/edit/{id}', [ProductController::class, 'EditProduct'])->name('product.edit');


ProductController
    public function EditProduct($id){
        $categories = Category::latest()->get();
        $brands = Brand::latest()->get();
        $subcategory = SubCategory::latest()->get();
        $subsubcategory = SubSubCategory::latest()->get();
        $products = Product::findOrFail($id);
        return view('backend.product.product_edit',compact('categories','brands','subcategory','subsubcategory','products'));
    }

product_edit

(164) Manage Product Edit Option Part 2

product_edit

(165) Manage Product Update Option





























































































































